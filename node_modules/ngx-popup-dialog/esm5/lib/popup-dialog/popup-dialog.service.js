/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Overlay } from '@angular/cdk/overlay';
import { Injectable } from '@angular/core';
import { MatDialog } from '@angular/material/dialog';
import { PopupDialog } from './popup-dialog';
/**
 * @record
 */
export function PopupDialogServiceConfig() { }
if (false) {
    /** @type {?|undefined} */
    PopupDialogServiceConfig.prototype.direction;
    /** @type {?|undefined} */
    PopupDialogServiceConfig.prototype.coverTriggeringElement;
    /** @type {?|undefined} */
    PopupDialogServiceConfig.prototype.scaleToTopOnBottomOverflow;
    /** @type {?|undefined} */
    PopupDialogServiceConfig.prototype.maxWidth;
    /** @type {?|undefined} */
    PopupDialogServiceConfig.prototype.maxHeight;
    /** @type {?|undefined} */
    PopupDialogServiceConfig.prototype.suppressCloseOnClickSelectors;
}
/**
 * @record
 */
export function PopupDialogConfig() { }
if (false) {
    /** @type {?|undefined} */
    PopupDialogConfig.prototype.data;
}
var PopupDialogService = /** @class */ (function () {
    function PopupDialogService(_overlay, _dialogService) {
        this._overlay = _overlay;
        this._dialogService = _dialogService;
    }
    /**
     * @template T
     * @param {?} componentOrTemplateRef
     * @param {?} triggeringElement
     * @param {?=} config
     * @return {?}
     */
    PopupDialogService.prototype.open = /**
     * @template T
     * @param {?} componentOrTemplateRef
     * @param {?} triggeringElement
     * @param {?=} config
     * @return {?}
     */
    function (componentOrTemplateRef, triggeringElement, config) {
        if (!config)
            config = {};
        /** @type {?} */
        var data = config.data;
        delete config.data;
        /** @type {?} */
        var popupDialogData = {
            config: tslib_1.__assign({}, config, { component: componentOrTemplateRef, triggeringElement: triggeringElement, maxWidth: (typeof config.maxWidth === "number") ? config.maxWidth + 'px' : config.maxWidth, maxHeight: (typeof config.maxHeight === "number") ? config.maxHeight + 'px' : config.maxHeight, scaleToTopOnBottomOverflow: config.scaleToTopOnBottomOverflow == null ? true : config.scaleToTopOnBottomOverflow, suppressCloseOnClickSelectors: typeof config.suppressCloseOnClickSelectors === "string" ? [config.suppressCloseOnClickSelectors] : config.suppressCloseOnClickSelectors }),
            data: data
        };
        /** @type {?} */
        var popupDialogConfig = {
            backdropClass: 'cdk-overlay-transparent-backdrop',
            hasBackdrop: false,
            scrollStrategy: this._overlay.scrollStrategies.noop(),
            panelClass: 'ngx-popup-dialog-overlay',
            restoreFocus: false,
            data: popupDialogData
        };
        /** @type {?} */
        var dialogRef = this._dialogService.open(PopupDialog, popupDialogConfig);
        return dialogRef;
    };
    PopupDialogService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    PopupDialogService.ctorParameters = function () { return [
        { type: Overlay },
        { type: MatDialog }
    ]; };
    return PopupDialogService;
}());
export { PopupDialogService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PopupDialogService.prototype._overlay;
    /**
     * @type {?}
     * @private
     */
    PopupDialogService.prototype._dialogService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wdXAtZGlhbG9nLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcG9wdXAtZGlhbG9nLyIsInNvdXJjZXMiOlsibGliL3BvcHVwLWRpYWxvZy9wb3B1cC1kaWFsb2cuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUUvQyxPQUFPLEVBQUUsVUFBVSxFQUFlLE1BQU0sZUFBZSxDQUFDO0FBQ3hELE9BQU8sRUFBRSxTQUFTLEVBQWlDLE1BQU0sMEJBQTBCLENBQUM7QUFFcEYsT0FBTyxFQUFhLFdBQVcsRUFBbUIsTUFBTSxnQkFBZ0IsQ0FBQzs7OztBQUV6RSw4Q0FPQzs7O0lBTkMsNkNBQXNCOztJQUN0QiwwREFBaUM7O0lBQ2pDLDhEQUFxQzs7SUFDckMsNENBQTJCOztJQUMzQiw2Q0FBNEI7O0lBQzVCLGlFQUFrRDs7Ozs7QUFHcEQsdUNBRUM7OztJQURDLGlDQUFXOztBQUdiO0lBRUUsNEJBQ1UsUUFBaUIsRUFDakIsY0FBeUI7UUFEekIsYUFBUSxHQUFSLFFBQVEsQ0FBUztRQUNqQixtQkFBYyxHQUFkLGNBQWMsQ0FBVztJQUFJLENBQUM7Ozs7Ozs7O0lBRXhDLGlDQUFJOzs7Ozs7O0lBQUosVUFBUSxzQkFBeUQsRUFBRSxpQkFBaUIsRUFBRSxNQUEwQjtRQUM5RyxJQUFJLENBQUMsTUFBTTtZQUFFLE1BQU0sR0FBRyxFQUFFLENBQUM7O1lBRXJCLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSTtRQUN0QixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUM7O1lBQ2IsZUFBZSxHQUFvQjtZQUN2QyxNQUFNLHVCQUNELE1BQU0sSUFDVCxTQUFTLEVBQUUsc0JBQXNCLEVBQ2pDLGlCQUFpQixFQUFFLGlCQUFpQixFQUNwQyxRQUFRLEVBQUUsQ0FBQyxPQUFPLE1BQU0sQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUMxRixTQUFTLEVBQUUsQ0FBQyxPQUFPLE1BQU0sQ0FBQyxTQUFTLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUM5RiwwQkFBMEIsRUFBRSxNQUFNLENBQUMsMEJBQTBCLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQywwQkFBMEIsRUFDaEgsNkJBQTZCLEVBQUUsT0FBTyxNQUFNLENBQUMsNkJBQTZCLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsNkJBQTZCLEdBQ3hLO1lBQ0QsSUFBSSxFQUFFLElBQUk7U0FDWDs7WUFDSyxpQkFBaUIsR0FBb0I7WUFDekMsYUFBYSxFQUFFLGtDQUFrQztZQUNqRCxXQUFXLEVBQUUsS0FBSztZQUNsQixjQUFjLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLEVBQUU7WUFDckQsVUFBVSxFQUFFLDBCQUEwQjtZQUN0QyxZQUFZLEVBQUUsS0FBSztZQUNuQixJQUFJLEVBQUUsZUFBZTtTQUN0Qjs7WUFDRyxTQUFTLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLGlCQUFpQixDQUFDO1FBQ3hFLE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7O2dCQWpDRixVQUFVOzs7O2dCQXBCRixPQUFPO2dCQUdQLFNBQVM7O0lBbURsQix5QkFBQztDQUFBLEFBbENELElBa0NDO1NBakNZLGtCQUFrQjs7Ozs7O0lBRTNCLHNDQUF5Qjs7Ozs7SUFDekIsNENBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3ZlcmxheSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcbmltcG9ydCB7IENvbXBvbmVudFR5cGUgfSBmcm9tICdAYW5ndWxhci9jZGsvcG9ydGFsJztcbmltcG9ydCB7IEluamVjdGFibGUsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXREaWFsb2csIE1hdERpYWxvZ0NvbmZpZywgTWF0RGlhbG9nUmVmIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZGlhbG9nJztcblxuaW1wb3J0IHsgRGlyZWN0aW9uLCBQb3B1cERpYWxvZywgUG9wdXBEaWFsb2dEYXRhIH0gZnJvbSAnLi9wb3B1cC1kaWFsb2cnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFBvcHVwRGlhbG9nU2VydmljZUNvbmZpZyB7XG4gIGRpcmVjdGlvbj86IERpcmVjdGlvbjtcbiAgY292ZXJUcmlnZ2VyaW5nRWxlbWVudD86IGJvb2xlYW47XG4gIHNjYWxlVG9Ub3BPbkJvdHRvbU92ZXJmbG93PzogYm9vbGVhbjtcbiAgbWF4V2lkdGg/OiBudW1iZXIgfCBzdHJpbmc7XG4gIG1heEhlaWdodD86IG51bWJlciB8IHN0cmluZztcbiAgc3VwcHJlc3NDbG9zZU9uQ2xpY2tTZWxlY3RvcnM/OiBzdHJpbmcgfCBzdHJpbmdbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQb3B1cERpYWxvZ0NvbmZpZyBleHRlbmRzIFBvcHVwRGlhbG9nU2VydmljZUNvbmZpZyB7XG4gIGRhdGE/OiBhbnk7XG59XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQb3B1cERpYWxvZ1NlcnZpY2Uge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIF9vdmVybGF5OiBPdmVybGF5LFxuICAgIHByaXZhdGUgX2RpYWxvZ1NlcnZpY2U6IE1hdERpYWxvZykgeyB9XG5cbiAgb3BlbjxUPihjb21wb25lbnRPclRlbXBsYXRlUmVmOiBDb21wb25lbnRUeXBlPFQ+IHwgVGVtcGxhdGVSZWY8VD4sIHRyaWdnZXJpbmdFbGVtZW50LCBjb25maWc/OiBQb3B1cERpYWxvZ0NvbmZpZyk6IE1hdERpYWxvZ1JlZjxQb3B1cERpYWxvZz4ge1xuICAgIGlmICghY29uZmlnKSBjb25maWcgPSB7fTtcblxuICAgIGxldCBkYXRhID0gY29uZmlnLmRhdGE7XG4gICAgZGVsZXRlIGNvbmZpZy5kYXRhO1xuICAgIGNvbnN0IHBvcHVwRGlhbG9nRGF0YTogUG9wdXBEaWFsb2dEYXRhID0ge1xuICAgICAgY29uZmlnOiB7XG4gICAgICAgIC4uLmNvbmZpZyxcbiAgICAgICAgY29tcG9uZW50OiBjb21wb25lbnRPclRlbXBsYXRlUmVmLFxuICAgICAgICB0cmlnZ2VyaW5nRWxlbWVudDogdHJpZ2dlcmluZ0VsZW1lbnQsXG4gICAgICAgIG1heFdpZHRoOiAodHlwZW9mIGNvbmZpZy5tYXhXaWR0aCA9PT0gXCJudW1iZXJcIikgPyBjb25maWcubWF4V2lkdGggKyAncHgnIDogY29uZmlnLm1heFdpZHRoLFxuICAgICAgICBtYXhIZWlnaHQ6ICh0eXBlb2YgY29uZmlnLm1heEhlaWdodCA9PT0gXCJudW1iZXJcIikgPyBjb25maWcubWF4SGVpZ2h0ICsgJ3B4JyA6IGNvbmZpZy5tYXhIZWlnaHQsXG4gICAgICAgIHNjYWxlVG9Ub3BPbkJvdHRvbU92ZXJmbG93OiBjb25maWcuc2NhbGVUb1RvcE9uQm90dG9tT3ZlcmZsb3cgPT0gbnVsbCA/IHRydWUgOiBjb25maWcuc2NhbGVUb1RvcE9uQm90dG9tT3ZlcmZsb3csXG4gICAgICAgIHN1cHByZXNzQ2xvc2VPbkNsaWNrU2VsZWN0b3JzOiB0eXBlb2YgY29uZmlnLnN1cHByZXNzQ2xvc2VPbkNsaWNrU2VsZWN0b3JzID09PSBcInN0cmluZ1wiID8gW2NvbmZpZy5zdXBwcmVzc0Nsb3NlT25DbGlja1NlbGVjdG9yc10gOiBjb25maWcuc3VwcHJlc3NDbG9zZU9uQ2xpY2tTZWxlY3RvcnNcbiAgICAgIH0sXG4gICAgICBkYXRhOiBkYXRhXG4gICAgfVxuICAgIGNvbnN0IHBvcHVwRGlhbG9nQ29uZmlnOiBNYXREaWFsb2dDb25maWcgPSB7XG4gICAgICBiYWNrZHJvcENsYXNzOiAnY2RrLW92ZXJsYXktdHJhbnNwYXJlbnQtYmFja2Ryb3AnLFxuICAgICAgaGFzQmFja2Ryb3A6IGZhbHNlLFxuICAgICAgc2Nyb2xsU3RyYXRlZ3k6IHRoaXMuX292ZXJsYXkuc2Nyb2xsU3RyYXRlZ2llcy5ub29wKCksXG4gICAgICBwYW5lbENsYXNzOiAnbmd4LXBvcHVwLWRpYWxvZy1vdmVybGF5JyxcbiAgICAgIHJlc3RvcmVGb2N1czogZmFsc2UsXG4gICAgICBkYXRhOiBwb3B1cERpYWxvZ0RhdGFcbiAgICB9XG4gICAgbGV0IGRpYWxvZ1JlZiA9IHRoaXMuX2RpYWxvZ1NlcnZpY2Uub3BlbihQb3B1cERpYWxvZywgcG9wdXBEaWFsb2dDb25maWcpO1xuICAgIHJldHVybiBkaWFsb2dSZWY7XG4gIH1cbn1cbiJdfQ==