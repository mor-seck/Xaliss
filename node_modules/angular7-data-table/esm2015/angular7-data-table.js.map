{
  "version": 3,
  "file": "angular7-data-table.js",
  "sources": [
    "ng://angular7-data-table/out/datatable.module.ts",
    "ng://angular7-data-table/out/components/filter-bar/filter-bar.component.ts",
    "ng://angular7-data-table/out/components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog.ts",
    "ng://angular7-data-table/out/components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog.ts",
    "ng://angular7-data-table/out/components/pagination/pagination.component.ts",
    "ng://angular7-data-table/out/components/header/header.component.ts",
    "ng://angular7-data-table/out/components/table/table.component.ts",
    "ng://angular7-data-table/out/utils/drag.ts",
    "ng://angular7-data-table/out/types/default-translations.type.ts",
    "ng://angular7-data-table/out/components/row/row.component.ts",
    "ng://angular7-data-table/out/directives/column/column.directive.ts",
    "ng://angular7-data-table/out/tools/data-table-resource.ts",
    "ng://angular7-data-table/out/utils/px.ts",
    "ng://angular7-data-table/out/utils/min.ts",
    "ng://angular7-data-table/out/utils/hide.ts"
  ],
  "sourcesContent": [
    "// modules\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\n// material\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n// utils\nimport { HideDirective } from './utils/hide';\nimport { MinPipe } from './utils/min';\nimport { PixelConverter } from './utils/px';\nimport { NgxPopupDialogModule, PopupDialogService } from 'ngx-popup-dialog';\n// types & tools\nimport { DataTableTranslations } from './types/data-table-translations.type';\nimport { CellCallback } from './types/cell-callback.type';\nimport { RowCallback } from './types/row-callback.type';\nimport { DataTableResource } from './tools/data-table-resource';\nimport { DataTableParams } from './types/data-table-params.type';\n// components & directives\nimport { DataTableComponent } from './components/table/table.component';\nimport { DataTableRowComponent } from './components/row/row.component';\nimport { DataTableColumnDirective } from './directives/column/column.directive';\nimport { DataTableHeaderComponent } from './components/header/header.component';\nimport { DataTablePaginationComponent } from './components/pagination/pagination.component';\nimport { FilterBarComponent } from './components/filter-bar/filter-bar.component';\nimport { FieldFilterChooserPopupDialog } from './components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog';\nimport { FieldFilterPopupDialog } from './components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog';\n\nexport {\n  DataTableComponent, DataTableColumnDirective, DataTableRowComponent, DataTablePaginationComponent, DataTableHeaderComponent,\n  DataTableResource,\n  DataTableParams, DataTableTranslations,\n  CellCallback, RowCallback\n};\n\n@NgModule({\n  declarations: [\n    DataTableComponent, DataTableColumnDirective,\n    DataTableRowComponent, DataTablePaginationComponent, DataTableHeaderComponent,\n    PixelConverter, HideDirective, MinPipe, FilterBarComponent, FieldFilterChooserPopupDialog,\n    FieldFilterPopupDialog\n  ],\n  entryComponents: [\n    FieldFilterChooserPopupDialog,\n    FieldFilterPopupDialog\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    {\n      ngModule: NgxPopupDialogModule,\n      providers: [PopupDialogService]\n    },\n    MatFormFieldModule,\n    MatIconModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatListModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule\n  ],\n  exports: [DataTableComponent, DataTableColumnDirective]\n})\n\nexport class DataTableModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DataTableModule,\n      providers: []\n    };\n  }\n}\n\n\n",
    "import { Component, forwardRef, Inject, OnInit } from '@angular/core';\nimport { PopupDialogService } from 'ngx-popup-dialog';\n\nimport { Filter } from '../../types/filter.type';\nimport { FilterableField } from '../../types/filterable-field.type';\nimport { DataTableComponent } from '../table/table.component';\nimport { FieldFilterChooserPopupDialog } from './field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog';\nimport { FieldFilterPopupDialog } from './field-filter-popup-dialog/field-filter-popup-dialog';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { PopupDialog } from 'ngx-popup-dialog/lib/popup-dialog/popup-dialog';\n\n@Component({\n  selector: 'filter-bar',\n  template: `<div class=\"filter-bar\">\n    <div class=\"px-2 pb-2\">\n      <mat-chip-list #chipList>\n        <i class=\"fa fa-filter fa-2x filter-icon mr-1\" (click)=\"filterInput.click()\"></i>\n        <mat-chip *ngFor=\"let filter of filters\" (click)=\"chipClicked($event, filter)\" [removable]=\"true\" (removed)=\"removeFilter(filter)\">\n          {{formatChipDisplayText(filter)}}\n          <mat-icon matChipRemove>cancel</mat-icon>\n        </mat-chip>\n        <input #filterInput autocomplete=\"off\" class=\"filter-input\" [placeholder]=\"dataTable.labels.addFilter\" [matChipInputFor]=\"chipList\" (focus)=\"inputFocused($event)\">\n      </mat-chip-list>\n    </div>\n</div>\n`,\n  styles: [`.filter-input{background-color:transparent;border:0;height:32px;outline:0;padding:0}.filter-icon{color:#3367d6;cursor:pointer}`]\n})\nexport class FilterBarComponent implements OnInit {\n  fieldChooserDialogRef: MatDialogRef<PopupDialog>;\n  filters: Filter[] = [];\n  fields: FilterableField[];\n\n  constructor(\n    @Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\n    public popupDialogService: PopupDialogService) {\n    this.fields = this.dataTable.filterableFields;\n    if (dataTable.filters) {\n      this.filters = dataTable.filters\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  inputFocused(event: Event) {\n    (event.currentTarget as HTMLElement).blur();\n    this.openFieldChooserDialog(event.currentTarget);\n  }\n\n  chipClicked(event: Event, filter: Filter) {\n    const dialogRef = this.openFieldFilterDialog(event.currentTarget, filter);\n    dialogRef.afterClosed().subscribe((result: Filter) => {\n      if (!result) return;\n      this.dataTable.filterUpdated.emit({ old: this.convertFilterToEmittedFilter(filter), new: this.convertFilterToEmittedFilter(result) });\n      let index = this.filters.indexOf(filter)\n      this.filters[index] = result;\n      this.dataTable.filterChanged.emit(this.filters.map(c => this.convertFilterToEmittedFilter(c)));\n      filter = result;\n    });\n  }\n\n  openFieldChooserDialog(triggeredElement) {\n    if (this.fieldChooserDialogRef) return;\n    this.fieldChooserDialogRef = this.popupDialogService.open(\n      FieldFilterChooserPopupDialog,\n      triggeredElement,\n      {\n        coverTriggeringElement: true,\n        data: {\n          fields: this.fields,\n          labels: this.dataTable.labels\n        }\n      });\n\n    this.fieldChooserDialogRef.afterClosed().subscribe((field: FilterableField) => {\n      this.fieldChooserDialogRef = null;\n      if (!field) return;\n      const dialogRef = this.openFieldFilterDialog(triggeredElement, { field: field });\n      dialogRef.afterClosed().subscribe((filter: Filter) => {\n        if (!filter) return;\n\n        this.filters.push(filter);\n        this.dataTable.filterAdded.emit(this.convertFilterToEmittedFilter(filter));\n        this.dataTable.filterChanged.emit(this.filters.map(c => this.convertFilterToEmittedFilter(c)));\n      });\n    });\n  }\n\n  openFieldFilterDialog(triggeredElement, filter?: Filter) {\n    const dialogRef = this.popupDialogService.open(\n      FieldFilterPopupDialog,\n      triggeredElement,\n      {\n        suppressCloseOnClickSelectors: ['.cdk-overlay-container'],\n        coverTriggeringElement: true,\n        data: {\n          fieldFilter: filter,\n          labels: this.dataTable.labels\n        }\n      });\n    return dialogRef;\n  }\n\n  removeFilter(filter: Filter) {\n    const index = this.filters.indexOf(filter);\n\n    if (index >= 0) {\n      this.filters.splice(index, 1);\n      this.dataTable.filterRemoved.emit(this.convertFilterToEmittedFilter(filter));\n      this.dataTable.filterChanged.emit(this.filters.map(c => this.convertFilterToEmittedFilter(c)));\n    }\n  }\n\n  formatValue(filter: Filter) {\n    let value = filter.value;\n    if (filter.operator == 'empty') return '';\n\n    if (filter.field.dataType == \"enum\") {\n      value = (filter.value as any[]).map(v => typeof v === \"string\" ? v : v.displayText);\n    }\n\n    if (Array.isArray(value)) {\n      value = value.join(', ');\n    }\n\n    return value;\n  }\n\n  formatChipDisplayText(filter: Filter) {\n    if (filter.field.dataType == \"bool\") {\n      return filter.value == false ? `${this.dataTable.labels.not} ${filter.field.header}` : filter.field.header;\n    } else {\n      return `${filter.field.header} ${this.dataTable.labels.filterOperators[filter.operator]} ${this.formatValue(filter)}`\n    }\n  }\n\n  private convertFilterToEmittedFilter(filter: Filter) {\n    // clone the filter and extract values from enum possible options\n    let clonedFilter = JSON.parse(JSON.stringify(filter)) as Filter;\n    if (clonedFilter.operator == \"empty\") return clonedFilter;\n\n    if (clonedFilter.field.dataType == \"enum\") {\n      let valuesList = clonedFilter.value;\n      for (let i = 0; i < valuesList.length; i++) {\n        const value = valuesList[i];\n        valuesList[i] = typeof value === \"string\" ? value : value.value\n      }\n    }\n    return clonedFilter;\n  }\n}\n",
    "import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { POPUP_DIALOG_CLOSE } from 'ngx-popup-dialog';\n\nimport { DataTableTranslations } from '../../../types/data-table-translations.type';\nimport { Filter } from '../../../types/filter.type';\n\ninterface DialogData {\n  fieldFilter: Filter;\n  labels: DataTableTranslations;\n}\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n// @dynamic\n@Component({\n  selector: 'app-field-filter-popup-dialog',\n  template: `<div>\n  <form #f=\"ngForm\" (ngSubmit)=\"((f.valid && isAtleastOneValueSelected) || selectedOperator == 'empty') && onFilterApply()\">\n    <div class=\"header\">\n      <span class=\"field-label\">{{data.fieldFilter.field.header}}</span>\n      <button mat-dialog-close class=\"icon-button\" mat-icon-button>\n        <mat-icon aria-label=\"close\">close</mat-icon>\n      </button>\n    </div>\n    <div class=\"content\">\n      <div class=\"filter-operator\">\n        <div class=\"mat-auto-width\">\n          <mat-form-field>\n            <mat-select [(value)]=\"selectedOperator\">\n              <mat-option *ngFor=\"let operator of filterOperators\" [value]=\"operator\">\n                {{data.labels.filterOperators[operator]}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"ml-2 mat-auto-width\">\n        <ng-container *ngIf=\"dataType == 'number' && selectedOperator !== 'empty'\">\n          <ng-container *ngTemplateOutlet=\"numericField\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dataType == 'date' && selectedOperator !== 'empty'\">\n          <ng-container *ngTemplateOutlet=\"dateField\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dataType == 'text' && selectedOperator !== 'empty'\">\n          <ng-container *ngTemplateOutlet=\"textField\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dataType == 'enum' && selectedOperator !== 'empty'\">\n          <ng-container *ngTemplateOutlet=\"valuesListField; context: {options: data.fieldFilter.field.possibleOptions, form: f}\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dataType == 'bool' && selectedOperator !== 'empty'\">\n          <ng-container *ngTemplateOutlet=\"booleanField\"></ng-container>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"footer\">\n      <button type=\"submit\" class=\"mx-1\" mat-button>{{data.labels.apply}}</button>\n    </div>\n\n\n    <ng-template #dateField>\n      <mat-form-field hideRequiredMarker=\"true\" floatLabel=\"never\">\n        <input cdkFocusInitial autocomplete=\"off\" matInput [errorStateMatcher]=\"matcher\" #filterValueInput=\"ngModel\" name=\"filterValue\"\n          [(ngModel)]=\"filterValue\" [matDatepicker]=\"picker\" [placeholder]=\"data.labels.date\" class=\"ltr\" required>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker panelClass=\"field-filter-popup-value-panel\"></mat-datepicker>\n        <mat-error *ngIf=\"filterValueInput && filterValueInput.invalid\">{{getErrorMessage(filterValueInput)}}</mat-error>\n      </mat-form-field>\n    </ng-template>\n\n    <ng-template #numericField>\n      <mat-form-field hideRequiredMarker=\"true\" floatLabel=\"never\">\n        <input cdkFocusInitial autocomplete=\"off\" matInput [placeholder]=\"data.labels.value\" [errorStateMatcher]=\"matcher\"\n          #filterValueInput=\"ngModel\" name=\"filterValue\" [(ngModel)]=\"filterValue\" required pattern=\"^[0-9]+(\\.?[0-9]+)?$\">\n        <mat-error *ngIf=\"filterValueInput && filterValueInput.invalid\">{{getErrorMessage(filterValueInput)}}</mat-error>\n      </mat-form-field>\n    </ng-template>\n\n    <ng-template #valuesListField let-options=\"options\" let-operator=\"operator\" let-f=\"form\">\n      <div class=\"py-3\">\n        <mat-checkbox class=\"d-block\" *ngFor=\"let option of options\" [checked]=\"isValueChecked(option)\" (change)=\"valueCheckChange(option, $event.checked)\">{{getPossibleOptionDisplayText(option)}}</mat-checkbox>\n        <mat-error *ngIf=\"f.submitted && !isAtleastOneValueSelected\">{{MUST_SELECT_VALUE_VALIDATION}}</mat-error>\n      </div>\n    </ng-template>\n\n    <ng-template #booleanField>\n      <div class=\"py-3\">\n        <!-- Workaround to focus radio buttons -->\n        <input style=\"width: 0px; height: 0px;\" cdkFocusInitial (focus)=\"filterValue == false ? radioButtonFalse.focus() : radioButtonTrue.focus()\" autocomplete=\"off\" matInput>\n        <mat-radio-group [(ngModel)]=\"filterValue\" name=\"filterValue\">\n          <mat-radio-button #radioButtonTrue class=\"mr-3\" [value]=\"true\"><mat-icon class=\"mt-1\">check</mat-icon></mat-radio-button>\n          <mat-radio-button #radioButtonFalse [value]=\"false\"><mat-icon class=\"mt-1\">close</mat-icon></mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </ng-template>\n\n    <ng-template #textField>\n      <mat-form-field hideRequiredMarker=\"true\" floatLabel=\"never\">\n        <input cdkFocusInitial autocomplete=\"off\" matInput [placeholder]=\"data.labels.value\" [errorStateMatcher]=\"matcher\"\n          #filterValueInput=\"ngModel\" name=\"filterValue\" [(ngModel)]=\"filterValue\" required>\n        <mat-error *ngIf=\"filterValueInput && filterValueInput.invalid\">{{getErrorMessage(filterValueInput)}}</mat-error>\n      </mat-form-field>\n    </ng-template>\n\n  </form>\n</div>\n`,\n  styles: [`.header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;background:#3367d6;border-radius:2px 2px 0 0;color:#fff;font-size:15px;min-width:176px;padding:8px}.field-label{padding:0 8px}.icon-button{outline:0}.content{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;overflow:hidden;padding:24px;min-width:200px;max-height:200px;overflow-y:auto}.footer{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;color:#4285f4;padding:8px 0}::ng-deep .mat-select-value{min-width:24px!important}.mat-auto-width ::ng-deep .mat-form-field{width:auto!important}.mat-auto-width ::ng-deep .mat-form-field-infix{width:auto!important}.mat-auto-width ::ng-deep .mat-select-value{max-width:100%;width:auto}::ng-deep .mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:#4285f4}.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background,::ng-deep .mat-checkbox-checked.mat-accent .mat-checkbox-background{background-color:#4285f4}::ng-deep .mat-radio-button.mat-accent .mat-radio-inner-circle{background-color:#4285f4}::ng-deep .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle{border-color:#4285f4}::ng-deep .mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element{background-color:rgba(66,133,244,.26)!important}::-webkit-scrollbar{width:6px;background-color:#f5f5f5}::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#d9d9d9}.ltr{direction:ltr}`]\n})\nexport class FieldFilterPopupDialog implements OnInit {\n  MUST_SELECT_VALUE_VALIDATION = this.data.labels.selectedValueRequired;\n  private static numericOperators = ['lt', 'gt', 'lte', 'gte', 'eq', 'ne', 'empty']\n  private static textualOperators = ['contains', 'not_contains', 'starts', 'ends', 'eq', 'ne', 'empty']\n  private static  enumOperators = ['eq', 'ne', 'empty']\n  private static  boolOperators = ['eq']\n  private static ALL_FILTER_OPERATORS = {\n    \"number\" : FieldFilterPopupDialog.numericOperators,\n    \"date\": FieldFilterPopupDialog.numericOperators,\n    \"text\": FieldFilterPopupDialog.textualOperators,\n    \"enum\": FieldFilterPopupDialog.enumOperators,\n    \"bool\": FieldFilterPopupDialog.boolOperators\n  }\n  dataType;\n  filterOperators;\n  filterValue;\n  selectedOperator;\n  valuesList = [];\n  isAtleastOneValueSelected = true;\n\n  matcher = new MyErrorStateMatcher();\n\n  constructor(\n    @Inject(POPUP_DIALOG_CLOSE) private _dialogCloser: (dialogResult?: any) => void,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.dataType = this.data.fieldFilter.field.dataType;\n    this.filterOperators = FieldFilterPopupDialog.ALL_FILTER_OPERATORS[this.dataType]\n    if (!this.filterOperators) throw `Data type '${this.dataType}' for field '${this.data.fieldFilter.field.header}' is not recognized`\n    this.selectedOperator = this.data.fieldFilter.operator || this.filterOperators[0];\n    this.filterValue = this.dataType == 'date' ? this.toDate(this.data.fieldFilter.value) : this.data.fieldFilter.value;\n    if (this.dataType == 'enum') {\n      if (this.data.fieldFilter.value) this.valuesList = this.valuesList.concat(this.data.fieldFilter.value).filter(v => v != null);\n      this.isAtleastOneValueSelected = this.valuesList.length != 0;\n    }\n    if (this.dataType == 'bool' && this.filterValue == null) {\n      this.filterValue = true;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  onFilterApply() {\n    let value = this.filterValue;\n    if (this.selectedOperator === 'empty') {\n      value = null;\n    } else {\n      if (this.dataType == 'date') value = this.formatDate(value)\n      if (this.dataType == 'enum') value = this.valuesList;\n    }\n    this._dialogCloser({ field: this.data.fieldFilter.field, operator: this.selectedOperator, value: value });\n  }\n\n  valueCheckChange(value, checked: boolean) {\n    if (checked) {\n      this.valuesList.push(value)\n    } else {\n      let index = this.valuesList.indexOf(value);\n      if (index != -1) this.valuesList.splice(index, 1);\n    }\n    this.isAtleastOneValueSelected = this.valuesList.length != 0;\n  }\n\n  isValueChecked(value) {\n    return this.valuesList.indexOf(value) != -1;\n  }\n\n  getErrorMessage(field) {\n    if (field.hasError('matDatepickerParse')) return this.data.labels.validDateRequired;\n    else if (field.hasError('required')) return this.data.labels.valueRequired;\n    else if (field.hasError('pattern')) return this.data.labels.numericValueRequired;\n    else return '';\n  }\n\n  getPossibleOptionValue(option) {\n    return typeof option === 'string' ? option : option.value\n  }\n\n  getPossibleOptionDisplayText(option) {\n    return typeof option === 'string' ? option : option.displayText\n  }\n\n  private formatDate(d: Date) {\n    return [d.getDate(), d.getMonth() + 1, d.getFullYear()].join('/');\n  }\n\n  private toDate(s: string) {\n    if (!s) return new Date();\n    let split = s.split('/');\n    return new Date(Number(split[2]), Number(split[1]) - 1, Number(split[0]));\n  }\n}\n",
    "import { Component, Inject, OnInit, ViewChildren, QueryList, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { POPUP_DIALOG_CLOSE } from 'ngx-popup-dialog';\n\nimport { DataTableTranslations } from '../../../types/data-table-translations.type';\nimport { FilterableField } from '../../../types/filterable-field.type';\nimport { ListKeyManager } from '@angular/cdk/a11y';\nimport { UP_ARROW, DOWN_ARROW, ENTER } from '@angular/cdk/keycodes';\nimport { MatListItem } from '@angular/material/list';\n\n\ninterface DialogData {\n  fields: FilterableField[];\n  labels: DataTableTranslations\n}\n\n// @dynamic\n@Component({\n  selector: 'app-field-filter-chooser-popup-dialog',\n  template: `<div class=\"dialog-container\">\n  <form class=\"search-field\">\n    <mat-form-field>\n      <input autocomplete=\"off\" matInput [placeholder]=\"data.labels.searchField\" name=\"fieldSearchQuery\" [ngModel]=\"fieldSearchQuery\"\n        (ngModelChange)=\"onFieldSearch($event)\" (keydown)=\"handleKeyDown($event)\">\n    </mat-form-field>\n  </form>\n  <div class=\"fields-list\">\n    <mat-nav-list>\n      <a tabindex=\"0\" mat-list-item [class.active]=\"activeItem == listItem\" #listItem *ngFor=\"let field of filteredFields\"\n        (click)=\"fieldSelected(field)\">{{field.header}}\n      </a>\n    </mat-nav-list>\n  </div>\n</div>\n`,\n  styles: [`.dialog-container{padding-bottom:12px}.search-field{padding:12px 12px 0}.fields-list{max-height:250px;overflow-y:auto}::-webkit-scrollbar{width:6px;background-color:#f5f5f5}::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#d9d9d9}.mat-list-item.active{background:rgba(0,0,0,.04)}`]\n})\nexport class FieldFilterChooserPopupDialog implements OnInit {\n  @ViewChildren('listItem') listItem: QueryList<any>\n  keyboardEventsManager: ListKeyManager<any>;\n  activeItem: any;\n\n  fieldSearchQuery = '';\n  filteredFields: FilterableField[];\n  constructor(\n    @Inject(POPUP_DIALOG_CLOSE) private _dialogCloser: (dialogResult?: any) => void,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.filteredFields = data.fields;\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    this.keyboardEventsManager = new ListKeyManager(this.listItem);\n  }\n\n  onFieldSearch(searchQuery: string) {\n    this.filteredFields = this.data.fields.filter(c => c.header.toLowerCase().indexOf(searchQuery.toLowerCase()) != -1);\n  }\n\n  fieldSelected(field: FilterableField) {\n    this._dialogCloser(field);\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    event.stopImmediatePropagation();\n    if (this.keyboardEventsManager) {\n      if (event.keyCode === DOWN_ARROW || event.keyCode === UP_ARROW) {\n        // passing the event to key manager so we get a change fired\n        this.keyboardEventsManager.onKeydown(event);\n        let activeItem = this.keyboardEventsManager.activeItem as MatListItem;\n        if (activeItem == this.activeItem) {\n          event.keyCode === DOWN_ARROW ? this.keyboardEventsManager.setFirstItemActive() : this.keyboardEventsManager.setLastItemActive();\n          activeItem = this.keyboardEventsManager.activeItem as MatListItem;\n        }\n        this.activeItem = activeItem;\n        (this.keyboardEventsManager.activeItem as MatListItem)._getHostElement().scrollIntoView();\n        return false;\n      } else if (event.keyCode === ENTER) {\n        (this.keyboardEventsManager.activeItem as MatListItem)._getHostElement().click();\n        return false;\n      }\n    }\n  }\n}\n",
    "import {\n  Component,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  ViewChild\n} from '@angular/core';\nimport { DataTableComponent} from '../table/table.component';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'data-table-pagination',\n  template: `<div class=\"d-flex justify-content-between align-items-center\">\n  <div class=\"pagination-range\">\n    <span [textContent]=\"dataTable.labels.paginationText\n        .replace('{from}', this.Math.ceil(dataTable.itemCount / dataTable.limit) !== 0 ? dataTable.offset + 1 + '' : '0')\n        .replace('{to}', this.Math.min(dataTable.offset + dataTable.limit, dataTable.itemCount) + '')\n        .replace('{total}', dataTable.itemCount + '')\"></span>\n  </div>\n  <div class=\"pagination-controllers pagination-box d-flex justify-content-between\">\n    <div class=\"pagination-limit d-flex justify-content-between\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <label [attr.for]=\"id + '-page-limit'\" class=\"input-group-text\" [textContent]=\"dataTable.labels.paginationLimit\"></label>\n        </div>\n        <select [id]=\"id + '-page-limit'\" class=\"form-control\" [(ngModel)]=\"limit\" [disabled]=\"dataTable.itemCount === 0\">\n          <option *ngFor=\"let l of limits\" [value]=\"l\">{{ l }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"pagination-pages d-flex justify-content-between\">\n      <button [disabled]=\"dataTable.offset <= 0\"\n              (click)=\"pageFirst()\"\n              class=\"btn btn-default pagination-firstpage\"\n              [title]=\"dataTable.labels.firstPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-double-left\" aria-hidden=\"true\"></i>\n      </button>\n      <button [disabled]=\"dataTable.offset <= 0\"\n              (click)=\"pageBack()\"\n              class=\"btn btn-default pagination-prevpage\"\n              [title]=\"dataTable.labels.prevPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"pagination-page\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <label class=\"input-group-text\" [attr.for]=\"id + '-page-input'\">\n              {{ dataTable.labels.pageNumberLabel }}\n            </label>\n          </div>\n          <input #pageInput type=\"number\"\n                 [id]=\"id + '-page-input'\"\n                 class=\"form-control\" min=\"1\" step=\"1\" max=\"{{maxPage}}\"\n                 [disabled]=\"dataTable.itemCount === 0\"\n                 [ngModel]=\"page\"\n                 (blur)=\"validate($event)\"\n                 (keyup.enter)=\"validate($event)\"\n                 (keyup.esc)=\"pageInput.value = page\"\n                 [title]=\"dataTable.labels.pageNumber + ' ' +\n                    dataTable.labels.pageNumberNofM.replace('{N}', ''+page).replace('{M}', ''+maxPage)\"\n                 [attr.aria-controls]=\"dataTable.id\"/>\n          <div class=\"input-group-append\">\n            <span class=\"input-group-text\">\n              {{ dataTable.labels.paginationTotalPages }}&nbsp;{{ dataTable.lastPage }}\n            </span>\n          </div>\n        </div>\n      </div>\n      <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\n              (click)=\"pageForward()\"\n              class=\"btn btn-default pagination-nextpage\"\n              [title]=\"dataTable.labels.nextPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\n      </button>\n      <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\n              (click)=\"pageLast()\"\n              class=\"btn btn-default pagination-lastpage\"\n              [title]=\"dataTable.labels.lastPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n`,\n  styles: [`.pagination-controllers select{min-width:5rem;text-align:right}.pagination-pages>*{margin:0 .15rem}.pagination-limit{margin-right:1.5rem}.pagination-box button{outline:0!important}`]\n})\nexport class DataTablePaginationComponent {\n\n  id = `pagination-${nextId++}`;\n\n  @ViewChild('pageInput') pageInput: ElementRef;\n\n  Math: any;\n\n  @Input() limits: number[];\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent) {\n    this.Math = Math;\n  }\n\n  pageBack() {\n    this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);\n    if (this.dataTable.offset <= 0) {\n      this.pageInput.nativeElement.focus();\n    }\n}\n  pageForward() {\n    this.dataTable.offset += this.dataTable.limit;\n    if ((this.dataTable.offset + this.dataTable.limit) >= this.dataTable.itemCount) {\n      this.pageInput.nativeElement.focus();\n    }\n  }\n\n  pageFirst() {\n    this.dataTable.offset = 0;\n    this.pageInput.nativeElement.focus();\n  }\n\n  pageLast() {\n    this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;\n    if ((this.dataTable.offset + this.dataTable.limit) >= this.dataTable.itemCount) {\n      this.pageInput.nativeElement.focus();\n    }\n  }\n\n  get maxPage() {\n    return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);\n  }\n\n  get limit() {\n    return this.dataTable.limit;\n  }\n\n  set limit(value) {\n    this.dataTable.limit = +value;\n    // returning back to the first page.\n    this.page = 1;\n  }\n\n  get page() {\n    return this.dataTable.page;\n  }\n\n  set page(value) {\n    this.dataTable.page = +value;\n  }\n\n  validate(event) {\n    const newValue = +event.target.value;\n    if (newValue !== this.page) {\n      this.page = (event.target.value > this.maxPage) ? this.maxPage : (newValue < 1 ) ? 1 : newValue;\n      event.target.value = this.page;\n    }\n  }\n}\n",
    "import {\n  Component,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Inject\n} from '@angular/core';\nimport { DataTableComponent } from '../table/table.component';\n\n@Component({\n  selector: 'data-table-header',\n  template: `<div class=\"data-table-header\">\n  <p class=\"h4 title\" *ngIf=\"dataTable.showTitle\" [textContent]=\"dataTable.title\"></p>\n  <div class=\"button-panel\">\n    <button type=\"button\" class=\"btn btn-default btn-sm refresh-button\"\n            (click)=\"dataTable.refreshClick.emit()\"\n            [title]=\"dataTable.labels.headerReload.replace('{title}', dataTable.title)\">\n      <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>\n    </button>\n    <button type=\"button\" class=\"btn btn-default btn-sm column-selector-button\" [class.active]=\"columnSelectorOpen\"\n            [attr.aria-haspopup]=\"true\"\n            [attr.aria-expanded]=\"columnSelectorOpen\"\n            (click)=\"columnSelectorOpen = !columnSelectorOpen;\"\n            [title]=\"dataTable.labels.headerColumnSelector.replace('{title}', dataTable.title)\">\n      <i class=\"fa fa-list\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"column-selector-wrapper\">\n      <div *ngIf=\"columnSelectorOpen\" class=\"column-selector-box panel panel-default\">\n        <ul class=\"list-group list-group-flush\">\n          <li *ngIf=\"dataTable.expandableRows\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.expandColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.expandColumn\"></span>\n            </label>\n          </li>\n          <li *ngIf=\"dataTable.indexColumn\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.indexColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.indexColumn\"></span>\n            </label>\n          </li>\n          <li *ngIf=\"dataTable.selectColumn\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.selectColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.selectColumn\"></span>\n            </label>\n          </li>\n          <ng-template ngFor let-item let-i=\"index\" [ngForOf]=\"dataTable.columns\">\n            <li class=\"list-group-item column-selector-column checkbox\"\n                *ngIf=\"dataTable.primaryColumn !== item.property\">\n              <label class=\"d-flex align-items-center\">\n                <input type=\"checkbox\" [(ngModel)]=\"item.visible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n                <span [textContent]=\"item.header\"></span>\n              </label>\n            </li>\n          </ng-template>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n`,\n  styles: [`.data-table-header{min-height:25px;margin-bottom:10px}.title{display:inline-block;margin:5px 0 0 5px}.button-panel{float:right}.button-panel button{outline:0!important}.column-selector-wrapper{position:relative}.column-selector-box{-webkit-box-shadow:0 0 10px #d3d3d3;box-shadow:0 0 10px #d3d3d3;background:#fff;width:150px;padding:10px;position:absolute;right:0;top:1px;z-index:1060}.column-selector-box .list-group-item.column-selector-column{padding:.5rem .25rem}.column-selector-box .list-group-item.column-selector-column label{margin-bottom:0}.column-selector-box .list-group-item.column-selector-column input{margin-right:4px;font-style:italic}`]\n})\nexport class DataTableHeaderComponent {\n\n  columnSelectorOpen = false;\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\n              private elemRef: ElementRef) {\n  }\n\n  @HostListener('document:click', ['$event']) onClickHandler(event) {\n    if (!this.elemRef.nativeElement.contains(event.target)) {\n      this.columnSelectorOpen = false;\n    }\n  }\n\n  @HostListener('document:keyup', ['$event']) onKeyUpHandler(event) {\n    if (event.keyCode === 27 || (event.keyCode === 9 && !this.elemRef.nativeElement.contains(event.target))) {\n      this.columnSelectorOpen = false;\n    }\n  }\n\n  onChange(event: Event) {\n    const isChecked = (<HTMLInputElement> event.target).checked;\n    const columnName = (<HTMLInputElement> event.target).parentElement.textContent.trim();\n    const interpolateParams = {\n      'column_name': columnName,\n      'title': this.dataTable.title\n    };\n\n    this.dataTable.columnSelectorNotification = (isChecked ? this.dataTable.labels.headerColumnSelectorAdded :\n      this.dataTable.labels.headerColumnSelectorRemoved)\n      .replace('{column_name}', interpolateParams.column_name)\n      .replace('{title}', interpolateParams.title);\n  }\n}\n",
    "\nimport {debounceTime} from 'rxjs/operators';\nimport {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChildren\n} from '@angular/core';\nimport { DataTableColumnDirective } from '../../directives/column/column.directive';\nimport { DataTableRowComponent } from '../row/row.component';\nimport { DataTableParams } from '../../types/data-table-params.type';\nimport { RowCallback } from '../../types/row-callback.type';\nimport { DataTableTranslations } from '../../types/data-table-translations.type';\nimport { defaultTranslations } from '../../types/default-translations.type';\nimport { drag } from '../../utils/drag';\n\nimport { Subject ,  Subscription } from 'rxjs';\nimport { FilterableField } from '../../types/filterable-field.type';\nimport { Filter } from '../../types/filter.type';\n\n\nlet nextId = 0;\n\n@Component({\n  selector: 'data-table',\n  template: `<div class=\"data-table-wrapper\">\n  <span class=\"sr-only\" role=\"status\" aria-live=\"polite\" aria-atomic=\"false\" aria-relevant=\"text\">\n    <span [textContent]=\"reloadNotification\"></span>\n    <span [textContent]=\"paginationNotification\"></span>\n    <span [textContent]=\"sortNotification\"></span>\n    <span [textContent]=\"columnSelectorNotification\"></span>\n  </span>\n\n  <data-table-header *ngIf=\"header\"></data-table-header>\n  <filter-bar *ngIf=\"filterableFields && filterableFields.length > 0\"></filter-bar>\n\n  <div class=\"data-table-box {{tableContainerCssClass}}\">\n    <table class=\"table data-table {{tableCssClass}}\" [id]=\"id\">\n      <caption class=\"sr-only\" [textContent]=\"title\"></caption>\n      <thead>\n      <tr>\n        <td [hide]=\"!expandColumnVisible\" class=\"expand-column-header\">\n        </td>\n        <th scope=\"col\" [hide]=\"!indexColumnVisible\" class=\"index-column-header\">\n          <span [textContent]=\"indexColumnHeader\"></span>\n        </th>\n        <td [hide]=\"!selectColumnVisible\" class=\"select-column-header\">\n          <input [hide]=\"!multiSelect\"\n                 type=\"checkbox\"\n                 [(ngModel)]=\"selectAllCheckbox\"\n                 [disabled]=\"itemCount === 0\"\n                 [title]=\"labels.selectAllRows\"\n                 [attr.aria-label]=\"labels.selectAllRows\"/>\n        </td>\n        <th *ngFor=\"let column of columns, index as i\" #th\n            [hide]=\"!column.visible\"\n            [class.sortable]=\"column.sortable\"\n            [class.resizable]=\"column.resizable\"\n            scope=\"col\"\n            [attr.aria-sort]=\"column.sortable ? (column.property === sortBy ? (sortAsc ? 'ascending' : 'descending') : 'none') : null\"\n            [ngClass]=\"column.styleClassObject\" class=\"column-header\" [style.width]=\"column.width | px\" >\n          <button *ngIf=\"column.sortable\" (click)=\"headerClicked(column, $event)\"\n                  [attr.aria-controls]=\"column.sortable ? id : null\"\n                  [disabled]=\"itemCount === 0\"\n                  [attr.aria-labelledby]=\"'col-'+id+'-'+i\"\n                  [title]=\"!sortAsc ? labels.sortAscending : labels.sortDescending\">\n            <span *ngIf=\"!column.headerTemplate\" [id]=\"'col-'+id+'-'+i\"\n                  [textContent]=\"column.header\"></span>\n            <span *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\"\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\n              <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\n                aria-hidden=\"true\"></i>\n              <i [hide]=\"column.property !== sortBy\" class=\"fa\"\n                [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\n            </span>\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\n          </button>\n          <span *ngIf=\"!column.sortable\">\n            <span *ngIf=\"!column.headerTemplate\"\n                  [textContent]=\"column.header\"></span>\n            <span *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\"\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\n               <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\n                  aria-hidden=\"true\"></i>\n               <i [hide]=\"column.property !== sortBy\" class=\"fa\"\n                  [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\n            </span>\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\n          </span>\n        </th>\n      </tr>\n      </thead>\n      <tbody *ngFor=\"let item of items; let index=index\" class=\"data-table-row-wrapper\"\n             dataTableRow #row [item]=\"item\" [index]=\"index\" (selectedChange)=\"onRowSelectChanged(row)\">\n      </tbody>\n      <tbody *ngIf=\"itemCount === 0 && noDataMessage\">\n        <tr>\n          <td [attr.colspan]=\"columnCount\">{{ noDataMessage }}</td>\n        </tr>\n      </tbody>\n      <tbody class=\"substitute-rows\" *ngIf=\"pagination && substituteRows\">\n      <tr *ngFor=\"let item of substituteItems, let index = index\"\n          [class.row-odd]=\"(index + items.length) % 2 === 0\"\n          [class.row-even]=\"(index + items.length) % 2 === 1\" role=\"presentation\">\n        <td [hide]=\"!expandColumnVisible\"></td>\n        <td [hide]=\"!indexColumnVisible\">&nbsp;</td>\n        <td [hide]=\"!selectColumnVisible\"></td>\n        <td *ngFor=\"let column of columns\" [hide]=\"!column.visible\">\n      </tr>\n      </tbody>\n    </table>\n    <div class=\"busy\" *ngIf=\"showReloading && reloading\">\n      <i><i class=\"fa fa-spin fa-cog fa-2x\"></i></i>\n    </div>\n  </div>\n\n  <data-table-pagination *ngIf=\"pagination\" [limits]=\"pageLimits\"></data-table-pagination>\n</div>\n`,\n  styles: [`:host /deep/ .data-table.table>tbody+tbody{border-top:none}:host /deep/ .data-table.table td{vertical-align:middle}:host /deep/ .data-table>tbody>tr>td,:host /deep/ .data-table>thead>tr>th{overflow:hidden}:host /deep/ .data-table>thead>tr>td{border-bottom:2px solid #dee2e6}:host /deep/ .row-odd{background-color:#f6f6f6}.data-table .substitute-rows>tr:hover,:host /deep/ .data-table .data-table-row:hover{background-color:#ececec}.data-table{-webkit-box-shadow:0 0 15px #ececec;box-shadow:0 0 15px #ececec;table-layout:fixed}.column-header{position:relative}.expand-column-header{width:50px}.select-column-header{width:50px;text-align:center}.index-column-header{width:40px}.column-header.sortable button{-webkit-box-sizing:content-box;box-sizing:content-box;background:0 0;border:0;color:inherit;cursor:pointer;font:inherit;line-height:normal;overflow:visible;padding:0;-webkit-appearance:button;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;text-align:left}.column-header .column-sort-icon{margin-left:8px}.column-header.resizable .column-sort-icon{margin-right:8px}.column-header .column-sort-icon .column-sortable-icon{color:#d3d3d3}.column-header .column-resize-handle{position:absolute;top:0;right:0;margin:0;padding:0;width:8px;height:100%;cursor:col-resize}.data-table-box{position:relative}.busy{position:absolute;z-index:1;top:0;bottom:0;left:0;right:0;background-color:rgba(0,0,0,.25)}.busy>i{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}`]\n})\nexport class DataTableComponent implements DataTableParams, OnInit, AfterContentInit, OnDestroy {\n\n  private _items: any[] = [];\n  private _itemCount;\n\n  @Input()\n  get items(): any[] {\n    return this._items;\n  }\n\n  set items(items: any[]) {\n    this._items = items;\n    // no need to call notifier.next() because _onReloadFinished()\n    // will change reloaded value causing notifier.next() to be called implicitly.\n    this._onReloadFinished();\n  }\n\n\n  @Input()\n  get itemCount(): number {\n    return this._itemCount;\n  }\n\n  set itemCount(count: number) {\n    this._itemCount = count;\n    this.notifier.next();\n  }\n\n  // UI components:\n  @ContentChildren(DataTableColumnDirective) columns: QueryList<DataTableColumnDirective>;\n  @ViewChildren(DataTableRowComponent) rows: QueryList<DataTableRowComponent>;\n  @ContentChild('dataTableExpand') expandTemplate: TemplateRef<any>;\n\n  // One-time optional bindings with default values:\n  @Input() title = '';\n  @Input() showTitle = true;\n  @Input() header = true;\n  @Input() pagination = true;\n  @Input() indexColumn = true;\n  @Input() indexColumnHeader = '';\n  @Input() rowColors: RowCallback;\n  @Input() rowTooltip: RowCallback;\n  @Input() filterableFields: FilterableField[];\n  @Input() filters: Filter[];\n  @Input() selectColumn = false;\n  @Input() multiSelect = true;\n  @Input() substituteRows = true;\n  @Input() expandableRows = false;\n  @Input() labels: DataTableTranslations;\n  @Input() selectOnRowClick = false;\n  @Input() autoReload = true;\n  @Input() showReloading = false;\n  @Input() noDataMessage: string;\n  @Input() pageLimits: number[] = [10, 25, 50, 100, 250];\n  @Input() primaryColumn = '';\n  @Input() tableCssClass = '';\n  @Input() tableContainerCssClass = '';\n\n  // reload emitter\n  @Output() reload = new EventEmitter();\n\n  // event handlers:\n  @Output() rowClick = new EventEmitter();\n  @Output() rowDoubleClick = new EventEmitter();\n  @Output() headerClick = new EventEmitter();\n  @Output() cellClick = new EventEmitter();\n  @Output() refreshClick = new EventEmitter();\n  @Output('filterAdded') filterAdded = new EventEmitter<Filter>();\n  @Output('filterRemoved') filterRemoved = new EventEmitter<Filter>();\n  @Output('filterUpdated') filterUpdated = new EventEmitter<{ old: Filter, new: Filter}>();\n  @Output('filterChanged') filterChanged = new EventEmitter<Filter[]>();\n  // UI state without input:\n  indexColumnVisible: boolean;\n  selectColumnVisible: boolean;\n  expandColumnVisible: boolean;\n\n  // ada notifications.\n  reloadNotification: string;\n  paginationNotification: string;\n  sortNotification: string;\n  columnSelectorNotification: string;\n\n  _displayParams = <DataTableParams>{}; // params of the last finished reload\n\n  subject = new Subject<void>();\n  subject$: Subscription;\n\n  notifier = new Subject<void>();\n  notifier$: Subscription;\n\n  // selection:\n  selectedRow: DataTableRowComponent;\n  selectedRows: DataTableRowComponent[] = [];\n\n  Math: any;\n  id = `datatable-${nextId++}`;\n\n  // select all checkbox flag\n  private _selectAllCheckbox = false;\n\n  // column resizing:\n  private _resizeInProgress = false;\n\n  resizeLimit = 30;\n\n  // Reloading:\n  _reloading = false;\n\n  get reloading() {\n    return this._reloading;\n  }\n\n  set reloading(val: boolean) {\n    this._reloading = val;\n    this.notifier.next();\n  }\n\n  // UI state: visible get/set for the outside with @Input for one-time initial values\n  private _sortBy: string;\n\n  @Input()\n  get sortBy(): string {\n    return this._sortBy;\n  }\n\n  set sortBy(value: string) {\n    this._sortBy = value;\n    this.subject.next();\n  }\n\n  private _sortAsc = true;\n\n  @Input()\n  get sortAsc(): boolean {\n    return this._sortAsc;\n  }\n\n  set sortAsc(value: boolean) {\n    this._sortAsc = value;\n    this.subject.next();\n  }\n\n  private _offset = 0;\n\n  @Input()\n  get offset(): number {\n    return this._offset;\n  }\n\n  set offset(value: number) {\n    this._offset = value;\n    this.subject.next();\n  }\n\n  private _limit = 10;\n\n  @Input()\n  get limit(): number {\n    return this._limit;\n  }\n\n  set limit(value: number) {\n    this._limit = value;\n    this.subject.next();\n  }\n\n  // calculated property:\n  @Input()\n  get page() {\n    return this.itemCount !== 0 ? Math.floor(this.offset / this.limit) + 1 : 0;\n  }\n\n  set page(value) {\n    this.offset = (value - 1) * this.limit;\n  }\n\n  get lastPage() {\n    return Math.ceil(this.itemCount / this.limit);\n  }\n\n  // setting multiple observable properties simultaneously\n  sort(sortBy: string, asc: boolean) {\n    this.sortBy = sortBy;\n    this.sortAsc = asc;\n  }\n\n  // init\n  ngOnInit() {\n    this._initDefaultValues();\n    this._initDefaultClickEvents();\n    this._updateDisplayParams();\n\n    if (this.pageLimits.indexOf(this.limit) < 0) {\n      this.limit = this.pageLimits[0];\n    }\n\n    this.labels = {...defaultTranslations, ...this.labels};\n\n    if (this.autoReload) {\n      this.reloadItems();\n    }\n\n    this.notifier$ = this.notifier.subscribe(() => this._notify());\n    this.subject$ = this.subject.pipe(debounceTime(100)).subscribe(() => this.reloadItems());\n\n  }\n\n  private _initDefaultValues() {\n    this.indexColumnVisible = this.indexColumn;\n    this.selectColumnVisible = this.selectColumn;\n    this.expandColumnVisible = this.expandableRows;\n  }\n\n  private _initDefaultClickEvents() {\n    this.headerClick.subscribe(\n      (tableEvent: { column: DataTableColumnDirective, event: Event }) => this.sortColumn(tableEvent.column));\n    if (this.selectOnRowClick) {\n      this.rowClick.subscribe(\n        (tableEvent: { row: DataTableRowComponent, event: Event }) => tableEvent.row.selected = !tableEvent.row.selected);\n    }\n  }\n\n  reloadItems() {\n    this.reloading = true;\n    this.reload.emit(this._getRemoteParameters());\n  }\n\n  private _onReloadFinished() {\n    if (this.reloading) {\n      this._updateDisplayParams();\n      this._selectAllCheckbox = false;\n      this.reloading = false;\n    }\n  }\n  get displayParams() {\n    return this._displayParams;\n  }\n\n  _updateDisplayParams() {\n    this._displayParams = {\n      sortBy: this.sortBy,\n      sortAsc: this.sortAsc,\n      offset: this.offset,\n      limit: this.limit\n    };\n  }\n\n  constructor() { }\n\n  public rowClicked(row: DataTableRowComponent, event: Event) {\n    this.rowClick.emit({row, event});\n  }\n\n  public rowDoubleClicked(row: DataTableRowComponent, event: Event) {\n    this.rowDoubleClick.emit({row, event});\n  }\n\n  public headerClicked(column: DataTableColumnDirective, event: Event) {\n    if (!this._resizeInProgress) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.headerClick.emit({column, event});\n    } else {\n      this._resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end\n    }\n  }\n\n  private cellClicked(column: DataTableColumnDirective, row: DataTableRowComponent, event: MouseEvent) {\n    this.cellClick.emit({row, column, event});\n  }\n\n  // functions:\n  private _getRemoteParameters(): DataTableParams {\n    const params = <DataTableParams>{};\n\n    if (this.sortBy) {\n      params.sortBy = this.sortBy;\n      params.sortAsc = this.sortAsc;\n    }\n    if (this.pagination) {\n      params.offset = this.offset;\n      params.limit = this.limit;\n    }\n    return params;\n  }\n\n  private sortColumn(column: DataTableColumnDirective) {\n    if (column.sortable) {\n      const ascending = this.sortBy === column.property ? !this.sortAsc : true;\n      this.sort(column.property, ascending);\n    }\n  }\n\n  get columnCount() {\n    let count = 0;\n    count += this.indexColumnVisible ? 1 : 0;\n    count += this.selectColumnVisible ? 1 : 0;\n    count += this.expandColumnVisible ? 1 : 0;\n    this.columns.toArray().forEach(column => {\n      count += column.visible ? 1 : 0;\n    });\n    return count;\n  }\n\n  public getRowColor(item: any, index: number, row: DataTableRowComponent) {\n    if (this.rowColors !== undefined) {\n      return (<RowCallback>this.rowColors)(item, row, index);\n    }\n  }\n\n  get selectAllCheckbox() {\n    return this._selectAllCheckbox;\n  }\n\n  set selectAllCheckbox(value) {\n    this._selectAllCheckbox = value;\n    this._onSelectAllChanged(value);\n  }\n\n  private _onSelectAllChanged(value: boolean) {\n    this.rows.toArray().forEach(row => row.selected = value);\n  }\n\n  onRowSelectChanged(row: DataTableRowComponent) {\n\n    // maintain the selectedRow(s) view\n    if (this.multiSelect) {\n      const index = this.selectedRows.indexOf(row);\n      if (row.selected && index < 0) {\n        this.selectedRows.push(row);\n      } else if (!row.selected && index >= 0) {\n        this.selectedRows.splice(index, 1);\n      }\n    } else {\n      if (row.selected) {\n        this.selectedRow = row;\n      } else if (this.selectedRow === row) {\n        delete this.selectedRow;\n      }\n    }\n\n    // unselect all other rows:\n    if (row.selected && !this.multiSelect) {\n      this.rows.toArray().filter(row_ => row_.selected).forEach(row_ => {\n        if (row_ !== row) { // avoid endless loop\n          row_.selected = false;\n        }\n      });\n    }\n  }\n\n  // other:\n\n  get substituteItems() {\n    return Array.from({length: this.displayParams.limit - this.items.length});\n  }\n\n  private resizeColumnStart(event: MouseEvent, column: DataTableColumnDirective, columnElement: HTMLElement) {\n    this._resizeInProgress = true;\n    let startOffset = columnElement.offsetWidth - event.pageX;\n    drag(event, {\n      move: (moveEvent: MouseEvent, dx: number) => {\n        if (this._isResizeInLimit(columnElement, dx)) {\n          column.width = startOffset + moveEvent.pageX + dx;\n        }\n      },\n    });\n  }\n\n  private _isResizeInLimit(columnElement: HTMLElement, dx: number) {\n    /* This is needed because CSS min-width didn't work on table-layout: fixed.\n         Without the limits, resizing can make the next column disappear completely,\n         and even increase the table width. The current implementation suffers from the fact,\n         that offsetWidth sometimes contains out-of-date values. */\n    if ((dx < 0 && (columnElement.offsetWidth + dx) <= this.resizeLimit) ||\n      !columnElement.nextElementSibling || // resizing doesn't make sense for the last visible column\n      (dx >= 0 && ((<HTMLElement> columnElement.nextElementSibling).offsetWidth + dx) <= this.resizeLimit)) {\n      return false;\n    }\n    return true;\n  }\n\n  ngAfterContentInit(): void {\n    if (this.primaryColumn === '') {\n      this.primaryColumn = (this.columns.first as DataTableColumnDirective).property;\n    }\n  }\n\n  _notify(): void {\n    const loading = this.reloading;\n\n    this.reloadNotification = loading ?\n      this.labels.loadingText.replace('{title}', this.title) :\n      this.labels.loadedText.replace('{title}', this.title);\n\n    if (!loading) {\n      if (this.pagination) {\n        this.paginationNotification = this.labels.paginationText\n          .replace('{from}', '' + (Math.ceil(this.itemCount / this.limit) !== 0 ? this.offset + 1 : '0'))\n          .replace('{to}', '' + (Math.min(this.offset + this.limit, this.itemCount)))\n          .replace('{total}', '' + this.itemCount);\n      } else {\n        this.paginationNotification = '';\n      }\n      if (this.columns !== undefined && this.sortBy !== undefined) {\n        const col = this.columns.toArray().find(column => column.property === this.sortBy) as DataTableColumnDirective;\n        this.sortNotification = (this.sortAsc ? this.labels.sortedAscending : this.labels.sortedDescending)\n          .replace('{title}', this.title)\n          .replace('{header}', col.header);\n      } else {\n        this.sortNotification = '';\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subject$.unsubscribe();\n    this.notifier$.unsubscribe();\n  }\n}\n",
    "export type MoveHandler = (event: MouseEvent, dx: number, dy: number, x: number, y: number) => void;\nexport type UpHandler = (event: MouseEvent, x: number, y: number, moved: boolean) => void;\n\n/*tslint:disable-next-line*/\nexport function drag(event: MouseEvent, {move: move, up: up}: { move: MoveHandler, up?: UpHandler }) {\n\n  const startX = event.pageX;\n  const startY = event.pageY;\n  let x = startX;\n  let y = startY;\n  let moved = false;\n\n  function mouseMoveHandler(evt: MouseEvent) {\n    const dx = evt.pageX - x;\n    const dy = evt.pageY - y;\n    x = evt.pageX;\n    y = evt.pageY;\n    if (dx || dy) {\n      moved = true;\n    }\n\n    move(evt, dx, dy, x, y);\n\n    event.preventDefault(); // to avoid text selection\n  }\n\n  function mouseUpHandler(evt: MouseEvent) {\n    x = evt.pageX;\n    y = evt.pageY;\n\n    document.removeEventListener('mousemove', mouseMoveHandler);\n    document.removeEventListener('mouseup', mouseUpHandler);\n\n    if (up) {\n      up(event, x, y, moved);\n    }\n  }\n\n  document.addEventListener('mousemove', mouseMoveHandler);\n  document.addEventListener('mouseup', mouseUpHandler);\n}\n",
    "import { DataTableTranslations } from './data-table-translations.type';\n\nexport const defaultTranslations: DataTableTranslations = {\n  headerReload: 'reload {title} table',\n  headerColumnSelector: 'column selector - adds or removes columns from {title} table',\n  headerColumnSelectorAdded: '{column_name} added to {title} table',\n  headerColumnSelectorRemoved: '{column_name} removed from {title} table',\n  indexColumn: 'index',\n  selectColumn: 'select',\n  selectRow: 'select {cell_content}',\n  selectAllRows: 'select all rows',\n  expandColumn: 'expand',\n  expandRow: 'expand {cell_content}',\n  sortedAscending: '{title} table sorted by {header} ascending',\n  sortedDescending: '{title} table sorted by {header} descending',\n  sortAscending: 'activate to sort ascending',\n  sortDescending: 'activate to sort descending',\n  paginationLimit: 'Limit',\n  paginationText: 'Results: {from} to {to} of {total}',\n  paginationTotalPages: 'of',\n  firstPage: 'first page',\n  prevPage: 'previous page',\n  pageNumberLabel: 'Page',\n  pageNumber: 'page number',\n  pageNumberNofM: '({N} of {M})',\n  nextPage: 'next page',\n  lastPage: 'last page',\n  loadingText: '{title} table is loading',\n  loadedText: '{title} table loaded',\n  addFilter: 'Add filter',\n  searchField: 'Search Field',\n  selectedValueRequired: 'You must select a value',\n  validDateRequired: 'You must enter valid date',\n  valueRequired: 'You must enter a value',\n  numericValueRequired: 'You must enter a numeric value',\n  apply: 'Apply',\n  value: 'Value',\n  date: 'Date',\n  not: 'Not',\n  filterOperators: {\n    'lt': '<',\n    'gt': '>',\n    'lte': '<=',\n    'gte': '>=',\n    'eq': '=',\n    'ne': 'not equal to',\n    'contains': 'contains',\n    'not_contains': 'not contains',\n    'starts': 'starts with',\n    'ends': 'ends with',\n    'empty': 'is empty',\n    'true': 'true',\n    'false': 'false'\n  }\n};\n",
    "import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2\n} from '@angular/core';\nimport { DataTableComponent } from '../table/table.component';\n\n@Component({\n  selector: '[dataTableRow]',\n  template: `<tr class=\"data-table-row\"\n    [title]=\"getTooltip()\"\n    [style.background-color]=\"dataTable.getRowColor(item, index, _this)\"\n    [class.row-odd]=\"index % 2 === 0\"\n    [class.row-even]=\"index % 2 === 1\"\n    [class.selected]=\"selected\"\n    [class.clickable]=\"dataTable.selectOnRowClick\">\n  <td [hide]=\"!dataTable.expandColumnVisible\">\n    <button (click)=\"expanded = !expanded; $event.stopPropagation()\" class=\"row-expand-button\"\n         [attr.aria-expanded]=\"expanded\"\n         [title]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\n         [attr.aria-label]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\">\n      <i [ngClass]=\"{'fa-caret-right': !expanded, 'fa-caret-down': expanded}\" class=\"fa fa-lg\" aria-hidden=\"true\"></i>\n    </button>\n  </td>\n  <td [hide]=\"!dataTable.indexColumnVisible\" class=\"index-column\" [textContent]=\"displayIndex\"></td>\n  <td [hide]=\"!dataTable.selectColumnVisible\" class=\"select-column\">\n    <input type=\"checkbox\" [(ngModel)]=\"selected\"\n           [title]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\n           [attr.aria-label]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"/>\n  </td>\n  <ng-template ngFor [ngForOf]=\"dataTable.columns\" let-column>\n    <th *ngIf=\"dataTable.primaryColumn === column.property\" scope=\"row\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n        class=\"data-column\" [attr.data-label]=\"column.header\"\n        [style.background-color]=\"column.getCellColor(_this, index)\">\n      <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n      <div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n           [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\n    </th>\n    <td *ngIf=\"dataTable.primaryColumn !== column.property\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n        class=\"data-column\" [attr.data-label]=\"column.header\"\n        [style.background-color]=\"column.getCellColor(_this, index)\">\n      <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n      <div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n           [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\n    </td>\n  </ng-template>\n</tr>\n<tr *ngIf=\"dataTable.expandableRows\" [hide]=\"!expanded\" class=\"row-expansion\">\n  <td [attr.colspan]=\"dataTable.columnCount\">\n    <div [ngTemplateOutlet]=\"dataTable.expandTemplate\" [ngTemplateOutletContext]=\"{row: _this, item: item}\"></div>\n  </td>\n</tr>\n`,\n  styles: [`.select-column{text-align:center}.row-expand-button{-webkit-box-sizing:content-box;box-sizing:content-box;background:0 0;border:0;color:inherit;cursor:pointer;font:inherit;line-height:normal;overflow:visible;padding:.15rem .75rem;-webkit-appearance:button;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}.clickable{cursor:pointer}th{font-weight:initial}`]\n})\nexport class DataTableRowComponent implements OnInit, OnDestroy {\n\n  public _this = this;\n\n  @Input() item: any;\n  @Input() index: number;\n\n  expanded: boolean;\n\n  private _listeners = [];\n\n  // row selection:\n  private _selected: boolean;\n\n  @Output() selectedChange = new EventEmitter();\n\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(selected) {\n    this._selected = selected;\n    this.selectedChange.emit(selected);\n  }\n\n  // other:\n  get displayIndex() {\n    if (this.dataTable.pagination) {\n      return this.dataTable.displayParams.offset + this.index + 1;\n    } else {\n      return this.index + 1;\n    }\n  }\n\n  getTooltip() {\n    if (this.dataTable.rowTooltip) {\n      return this.dataTable.rowTooltip(this.item, this, this.index);\n    }\n    return '';\n  }\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\n              private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    if (this.dataTable.rowClick.observers.length > 0) {\n      this._listeners.push(\n        this.renderer.listen(this.elementRef.nativeElement, 'click',\n          (event) => this.dataTable.rowClicked(this, event))\n      );\n    }\n    if (this.dataTable.rowDoubleClick.observers.length > 0) {\n      this._listeners.push(\n        this.renderer.listen(this.elementRef.nativeElement, 'dblclick',\n          (event) => this.dataTable.rowDoubleClicked(this, event))\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.selected = false;\n    this._listeners.forEach(fn => fn());\n  }\n}\n",
    "import {ContentChild, Directive, ElementRef, Input, OnInit} from '@angular/core';\nimport {DataTableRowComponent} from '../../components/row/row.component';\nimport {CellCallback} from '../../types/cell-callback.type';\n\n\n@Directive({\n  selector: 'data-table-column'\n})\nexport class DataTableColumnDirective implements OnInit {\n\n  private styleClassObject = {}; // for [ngClass]\n\n  // init:\n  @Input() header: string;\n  @Input() sortable = false;\n  @Input() resizable = false;\n  @Input() property: string;\n  @Input() styleClass: string;\n  @Input() cellColors: CellCallback;\n\n  // init and state:\n  @Input() width: number | string;\n  @Input() visible = true;\n\n  @ContentChild('dataTableCell') cellTemplate: ElementRef;\n  @ContentChild('dataTableHeader') headerTemplate: ElementRef;\n\n  getCellColor(row: DataTableRowComponent, index: number) {\n    if (this.cellColors !== undefined) {\n      return (<CellCallback>this.cellColors)(row.item, row, this, index);\n    }\n  }\n\n  ngOnInit() {\n    this._initCellClass();\n  }\n\n  private _initCellClass() {\n    if (!this.styleClass && this.property) {\n      if (/^[a-zA-Z0-9_]+$/.test(this.property)) {\n        this.styleClass = 'column-' + this.property;\n      } else {\n        this.styleClass = 'column-' + this.property.replace(/[^a-zA-Z0-9_]/g, '');\n      }\n    }\n\n    if (this.styleClass != null) {\n      this.styleClassObject = {\n        [this.styleClass]: true\n      };\n    }\n  }\n}\n",
    "import {DataTableParams} from '../types/data-table-params.type';\n\n\nexport class DataTableResource<T> {\n\n  constructor(private items: T[]) {\n  }\n\n  query(params: DataTableParams, filter?: (item: T, index: number, items: T[]) => boolean): Promise<T[]> {\n\n    let result: T[] = [];\n    if (filter) {\n      result = this.items.filter(filter);\n    } else {\n      result = this.items.slice(); // shallow copy to use for sorting instead of changing the original\n    }\n\n    if (params.sortBy) {\n      result.sort((a: DataTableParams, b: DataTableParams) => {\n        if (typeof a[params.sortBy] === 'string') {\n          return a[params.sortBy].localeCompare(b[params.sortBy]);\n        } else {\n          return a[params.sortBy] - b[params.sortBy];\n        }\n      });\n      if (params.sortAsc === false) {\n        result.reverse();\n      }\n    }\n    if (params.offset !== undefined) {\n      if (params.limit === undefined) {\n        result = result.slice(params.offset, result.length);\n      } else {\n        result = result.slice(params.offset, params.offset + params.limit);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(result));\n    });\n  }\n\n  count(): Promise<number> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(this.items.length));\n    });\n\n  }\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'px'\n})\nexport class PixelConverter implements PipeTransform {\n  transform(value: string | number, args: string[]): any {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (typeof value === 'number') {\n      return value + 'px';\n    }\n  }\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n  name: 'min'\n})\nexport class MinPipe implements PipeTransform {\n  transform(value: number[], args: string[]): any {\n    return Math.min.apply(null, value);\n  }\n}\n",
    "import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer2\n} from '@angular/core';\n\nfunction isBlank(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n\n@Directive({\n  selector: '[hide]'\n})\nexport class HideDirective {\n\n  private _prevCondition = false;\n  private _displayStyle: string;\n\n  constructor(private _elementRef: ElementRef, private renderer: Renderer2) {\n  }\n\n  @Input()\n  set hide(newCondition: boolean) {\n    this.initDisplayStyle();\n\n    if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {\n      this._prevCondition = true;\n      this.renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n    } else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {\n      this._prevCondition = false;\n      this.renderer.setStyle(this._elementRef.nativeElement, 'display', this._displayStyle);\n    }\n  }\n\n  private initDisplayStyle() {\n    if (this._displayStyle === undefined) {\n      const displayStyle = this._elementRef.nativeElement.style.display;\n      if (displayStyle !== 'none') {\n        this._displayStyle = displayStyle;\n      }\n    }\n  }\n}\n"
  ],
  "names": [
    "nextId"
  ],
  "mappings": "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"
}
