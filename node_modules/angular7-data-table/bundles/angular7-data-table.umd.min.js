!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs/operators"),require("rxjs"),require("@angular/material/dialog"),require("ngx-popup-dialog"),require("@angular/cdk/a11y"),require("@angular/cdk/keycodes"),require("@angular/common"),require("@angular/forms"),require("@angular/material/button"),require("@angular/material/chips"),require("@angular/material/form-field"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/list"),require("@angular/material/select"),require("@angular/material/checkbox"),require("@angular/material/radio"),require("@angular/material/datepicker"),require("@angular/material/core")):"function"==typeof define&&define.amd?define("angular7-data-table",["exports","@angular/core","rxjs/operators","rxjs","@angular/material/dialog","ngx-popup-dialog","@angular/cdk/a11y","@angular/cdk/keycodes","@angular/common","@angular/forms","@angular/material/button","@angular/material/chips","@angular/material/form-field","@angular/material/icon","@angular/material/input","@angular/material/list","@angular/material/select","@angular/material/checkbox","@angular/material/radio","@angular/material/datepicker","@angular/material/core"],t):t(e["angular7-data-table"]={},e.ng.core,e.Rx.Observable.prototype,e.rxjs,e.ng.material.dialog,e.ngxPopupDialog,e.ng.cdk.a11y,e.ng.cdk.keycodes,e.ng.common,e.ng.forms,e.ng.material.button,e.ng.material.chips,e.ng.material["form-field"],e.ng.material.icon,e.ng.material.input,e.ng.material.list,e.ng.material.select,e.ng.material.checkbox,e.ng.material.radio,e.ng.material.datepicker,e.ng.material.core)}(this,function(e,a,t,n,i,l,o,r,s,d,c,u,p,m,f,h,b,g,y,v,x){"use strict";function C(e){return e===undefined||null===e}var T=function(){function e(e,t){this._elementRef=e,this.renderer=t,this._prevCondition=!1}return Object.defineProperty(e.prototype,"hide",{set:function(e){this.initDisplayStyle(),!e||!C(this._prevCondition)&&this._prevCondition?e||!C(this._prevCondition)&&!this._prevCondition||(this._prevCondition=!1,this.renderer.setStyle(this._elementRef.nativeElement,"display",this._displayStyle)):(this._prevCondition=!0,this.renderer.setStyle(this._elementRef.nativeElement,"display","none"))},enumerable:!0,configurable:!0}),e.prototype.initDisplayStyle=function(){if(this._displayStyle===undefined){var e=this._elementRef.nativeElement.style.display;"none"!==e&&(this._displayStyle=e)}},e}();T.decorators=[{type:a.Directive,args:[{selector:"[hide]"}]}],T.ctorParameters=function(){return[{type:a.ElementRef},{type:a.Renderer2}]},T.propDecorators={hide:[{type:a.Input}]};var w=function(){function e(){}return e.prototype.transform=function(e,t){return Math.min.apply(null,e)},e}();w.decorators=[{type:a.Pipe,args:[{name:"min"}]}];var k=function(){function e(){}return e.prototype.transform=function(e,t){if(e!==undefined)return"string"==typeof e?e:"number"==typeof e?e+"px":void 0},e}();k.decorators=[{type:a.Pipe,args:[{name:"px"}]}];var I=function(){function e(e){this.items=e}return e.prototype.query=function(n,e){var a=[];return a=e?this.items.filter(e):this.items.slice(),n.sortBy&&(a.sort(function(e,t){return"string"==typeof e[n.sortBy]?e[n.sortBy].localeCompare(t[n.sortBy]):e[n.sortBy]-t[n.sortBy]}),!1===n.sortAsc&&a.reverse()),n.offset!==undefined&&(a=n.limit===undefined?a.slice(n.offset,a.length):a.slice(n.offset,n.offset+n.limit)),new Promise(function(e,t){setTimeout(function(){return e(a)})})},e.prototype.count=function(){var n=this;return new Promise(function(e,t){setTimeout(function(){return e(n.items.length)})})},e}(),O=function(){function e(){this.styleClassObject={},this.sortable=!1,this.resizable=!1,this.visible=!0}return e.prototype.getCellColor=function(e,t){if(this.cellColors!==undefined)return this.cellColors(e.item,e,this,t)},e.prototype.ngOnInit=function(){this._initCellClass()},e.prototype._initCellClass=function(){var e;!this.styleClass&&this.property&&(/^[a-zA-Z0-9_]+$/.test(this.property)?this.styleClass="column-"+this.property:this.styleClass="column-"+this.property.replace(/[^a-zA-Z0-9_]/g,"")),null!=this.styleClass&&(this.styleClassObject=((e={})[this.styleClass]=!0,e))},e}();O.decorators=[{type:a.Directive,args:[{selector:"data-table-column"}]}],O.propDecorators={header:[{type:a.Input}],sortable:[{type:a.Input}],resizable:[{type:a.Input}],property:[{type:a.Input}],styleClass:[{type:a.Input}],cellColors:[{type:a.Input}],width:[{type:a.Input}],visible:[{type:a.Input}],cellTemplate:[{type:a.ContentChild,args:["dataTableCell"]}],headerTemplate:[{type:a.ContentChild,args:["dataTableHeader"]}]};var _=function(){function e(e,t,n){this.dataTable=e,this.renderer=t,this.elementRef=n,(this._this=this)._listeners=[],this.selectedChange=new a.EventEmitter}return Object.defineProperty(e.prototype,"selected",{get:function(){return this._selected},set:function(e){this._selected=e,this.selectedChange.emit(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"displayIndex",{get:function(){return this.dataTable.pagination?this.dataTable.displayParams.offset+this.index+1:this.index+1},enumerable:!0,configurable:!0}),e.prototype.getTooltip=function(){return this.dataTable.rowTooltip?this.dataTable.rowTooltip(this.item,this,this.index):""},e.prototype.ngOnInit=function(){var t=this;0<this.dataTable.rowClick.observers.length&&this._listeners.push(this.renderer.listen(this.elementRef.nativeElement,"click",function(e){return t.dataTable.rowClicked(t,e)})),0<this.dataTable.rowDoubleClick.observers.length&&this._listeners.push(this.renderer.listen(this.elementRef.nativeElement,"dblclick",function(e){return t.dataTable.rowDoubleClicked(t,e)}))},e.prototype.ngOnDestroy=function(){this.selected=!1,this._listeners.forEach(function(e){return e()})},e}();_.decorators=[{type:a.Component,args:[{selector:"[dataTableRow]",template:'<tr class="data-table-row"\n    [title]="getTooltip()"\n    [style.background-color]="dataTable.getRowColor(item, index, _this)"\n    [class.row-odd]="index % 2 === 0"\n    [class.row-even]="index % 2 === 1"\n    [class.selected]="selected"\n    [class.clickable]="dataTable.selectOnRowClick">\n  <td [hide]="!dataTable.expandColumnVisible">\n    <button (click)="expanded = !expanded; $event.stopPropagation()" class="row-expand-button"\n         [attr.aria-expanded]="expanded"\n         [title]="dataTable.labels.expandRow.replace(\'{cell_content}\', \'\'+item[dataTable.primaryColumn])"\n         [attr.aria-label]="dataTable.labels.expandRow.replace(\'{cell_content}\', \'\'+item[dataTable.primaryColumn])">\n      <i [ngClass]="{\'fa-caret-right\': !expanded, \'fa-caret-down\': expanded}" class="fa fa-lg" aria-hidden="true"></i>\n    </button>\n  </td>\n  <td [hide]="!dataTable.indexColumnVisible" class="index-column" [textContent]="displayIndex"></td>\n  <td [hide]="!dataTable.selectColumnVisible" class="select-column">\n    <input type="checkbox" [(ngModel)]="selected"\n           [title]="dataTable.labels.selectRow.replace(\'{cell_content}\', \'\'+item[dataTable.primaryColumn])"\n           [attr.aria-label]="dataTable.labels.selectRow.replace(\'{cell_content}\', \'\'+item[dataTable.primaryColumn])"/>\n  </td>\n  <ng-template ngFor [ngForOf]="dataTable.columns" let-column>\n    <th *ngIf="dataTable.primaryColumn === column.property" scope="row" [hide]="!column.visible" [ngClass]="column.styleClassObject"\n        class="data-column" [attr.data-label]="column.header"\n        [style.background-color]="column.getCellColor(_this, index)">\n      <div *ngIf="!column.cellTemplate" [textContent]="item[column.property]"></div>\n      <div *ngIf="column.cellTemplate" [ngTemplateOutlet]="column.cellTemplate"\n           [ngTemplateOutletContext]="{column: column, row: _this, item: item}"></div>\n    </th>\n    <td *ngIf="dataTable.primaryColumn !== column.property" [hide]="!column.visible" [ngClass]="column.styleClassObject"\n        class="data-column" [attr.data-label]="column.header"\n        [style.background-color]="column.getCellColor(_this, index)">\n      <div *ngIf="!column.cellTemplate" [textContent]="item[column.property]"></div>\n      <div *ngIf="column.cellTemplate" [ngTemplateOutlet]="column.cellTemplate"\n           [ngTemplateOutletContext]="{column: column, row: _this, item: item}"></div>\n    </td>\n  </ng-template>\n</tr>\n<tr *ngIf="dataTable.expandableRows" [hide]="!expanded" class="row-expansion">\n  <td [attr.colspan]="dataTable.columnCount">\n    <div [ngTemplateOutlet]="dataTable.expandTemplate" [ngTemplateOutletContext]="{row: _this, item: item}"></div>\n  </td>\n</tr>\n',styles:[".select-column{text-align:center}.row-expand-button{-webkit-box-sizing:content-box;box-sizing:content-box;background:0 0;border:0;color:inherit;cursor:pointer;font:inherit;line-height:normal;overflow:visible;padding:.15rem .75rem;-webkit-appearance:button;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}.clickable{cursor:pointer}th{font-weight:initial}"]}]}],_.ctorParameters=function(){return[{type:E,decorators:[{type:a.Inject,args:[a.forwardRef(function(){return E})]}]},{type:a.Renderer2},{type:a.ElementRef}]},_.propDecorators={item:[{type:a.Input}],index:[{type:a.Input}],selectedChange:[{type:a.Output}]};var R={headerReload:"reload {title} table",headerColumnSelector:"column selector - adds or removes columns from {title} table",headerColumnSelectorAdded:"{column_name} added to {title} table",headerColumnSelectorRemoved:"{column_name} removed from {title} table",indexColumn:"index",selectColumn:"select",selectRow:"select {cell_content}",selectAllRows:"select all rows",expandColumn:"expand",expandRow:"expand {cell_content}",sortedAscending:"{title} table sorted by {header} ascending",sortedDescending:"{title} table sorted by {header} descending",sortAscending:"activate to sort ascending",sortDescending:"activate to sort descending",paginationLimit:"Limit",paginationText:"Results: {from} to {to} of {total}",paginationTotalPages:"of",firstPage:"first page",prevPage:"previous page",pageNumberLabel:"Page",pageNumber:"page number",pageNumberNofM:"({N} of {M})",nextPage:"next page",lastPage:"last page",loadingText:"{title} table is loading",loadedText:"{title} table loaded",addFilter:"Add filter",searchField:"Search Field",selectedValueRequired:"You must select a value",validDateRequired:"You must enter valid date",valueRequired:"You must enter a value",numericValueRequired:"You must enter a numeric value",apply:"Apply",value:"Value",date:"Date",not:"Not",filterOperators:{lt:"<",gt:">",lte:"<=",gte:">=",eq:"=",ne:"not equal to",contains:"contains",not_contains:"not contains",starts:"starts with",ends:"ends with",empty:"is empty","true":"true","false":"false"}};var F=0,E=function(){function e(){this._items=[],this.title="",this.showTitle=!0,this.header=!0,this.pagination=!0,this.indexColumn=!0,this.indexColumnHeader="",this.selectColumn=!1,this.multiSelect=!0,this.substituteRows=!0,this.expandableRows=!1,this.selectOnRowClick=!1,this.autoReload=!0,this.showReloading=!1,this.pageLimits=[10,25,50,100,250],this.primaryColumn="",this.tableCssClass="",this.tableContainerCssClass="",this.reload=new a.EventEmitter,this.rowClick=new a.EventEmitter,this.rowDoubleClick=new a.EventEmitter,this.headerClick=new a.EventEmitter,this.cellClick=new a.EventEmitter,this.refreshClick=new a.EventEmitter,this.filterAdded=new a.EventEmitter,this.filterRemoved=new a.EventEmitter,this.filterUpdated=new a.EventEmitter,this.filterChanged=new a.EventEmitter,this._displayParams={},this.subject=new n.Subject,this.notifier=new n.Subject,this.selectedRows=[],this.id="datatable-"+F++,this._selectAllCheckbox=!1,this._resizeInProgress=!1,this.resizeLimit=30,this._reloading=!1,this._sortAsc=!0,this._offset=0,this._limit=10}return Object.defineProperty(e.prototype,"items",{get:function(){return this._items},set:function(e){this._items=e,this._onReloadFinished()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"itemCount",{get:function(){return this._itemCount},set:function(e){this._itemCount=e,this.notifier.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"reloading",{get:function(){return this._reloading},set:function(e){this._reloading=e,this.notifier.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"sortBy",{get:function(){return this._sortBy},set:function(e){this._sortBy=e,this.subject.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"sortAsc",{get:function(){return this._sortAsc},set:function(e){this._sortAsc=e,this.subject.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"offset",{get:function(){return this._offset},set:function(e){this._offset=e,this.subject.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"limit",{get:function(){return this._limit},set:function(e){this._limit=e,this.subject.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"page",{get:function(){return 0!==this.itemCount?Math.floor(this.offset/this.limit)+1:0},set:function(e){this.offset=(e-1)*this.limit},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"lastPage",{get:function(){return Math.ceil(this.itemCount/this.limit)},enumerable:!0,configurable:!0}),e.prototype.sort=function(e,t){this.sortBy=e,this.sortAsc=t},e.prototype.ngOnInit=function(){var e=this;this._initDefaultValues(),this._initDefaultClickEvents(),this._updateDisplayParams(),this.pageLimits.indexOf(this.limit)<0&&(this.limit=this.pageLimits[0]),this.labels=Object.assign({},R,this.labels),this.autoReload&&this.reloadItems(),this.notifier$=this.notifier.subscribe(function(){return e._notify()}),this.subject$=this.subject.pipe(t.debounceTime(100)).subscribe(function(){return e.reloadItems()})},e.prototype._initDefaultValues=function(){this.indexColumnVisible=this.indexColumn,this.selectColumnVisible=this.selectColumn,this.expandColumnVisible=this.expandableRows},e.prototype._initDefaultClickEvents=function(){var t=this;this.headerClick.subscribe(function(e){return t.sortColumn(e.column)}),this.selectOnRowClick&&this.rowClick.subscribe(function(e){return e.row.selected=!e.row.selected})},e.prototype.reloadItems=function(){this.reloading=!0,this.reload.emit(this._getRemoteParameters())},e.prototype._onReloadFinished=function(){this.reloading&&(this._updateDisplayParams(),this._selectAllCheckbox=!1,this.reloading=!1)},Object.defineProperty(e.prototype,"displayParams",{get:function(){return this._displayParams},enumerable:!0,configurable:!0}),e.prototype._updateDisplayParams=function(){this._displayParams={sortBy:this.sortBy,sortAsc:this.sortAsc,offset:this.offset,limit:this.limit}},e.prototype.rowClicked=function(e,t){this.rowClick.emit({row:e,event:t})},e.prototype.rowDoubleClicked=function(e,t){this.rowDoubleClick.emit({row:e,event:t})},e.prototype.headerClicked=function(e,t){this._resizeInProgress?this._resizeInProgress=!1:(t.preventDefault(),t.stopPropagation(),this.headerClick.emit({column:e,event:t}))},e.prototype.cellClicked=function(e,t,n){this.cellClick.emit({row:t,column:e,event:n})},e.prototype._getRemoteParameters=function(){var e={};return this.sortBy&&(e.sortBy=this.sortBy,e.sortAsc=this.sortAsc),this.pagination&&(e.offset=this.offset,e.limit=this.limit),e},e.prototype.sortColumn=function(e){if(e.sortable){var t=this.sortBy!==e.property||!this.sortAsc;this.sort(e.property,t)}},Object.defineProperty(e.prototype,"columnCount",{get:function(){var t=0;return t+=this.indexColumnVisible?1:0,t+=this.selectColumnVisible?1:0,t+=this.expandColumnVisible?1:0,this.columns.toArray().forEach(function(e){t+=e.visible?1:0}),t},enumerable:!0,configurable:!0}),e.prototype.getRowColor=function(e,t,n){if(this.rowColors!==undefined)return this.rowColors(e,n,t)},Object.defineProperty(e.prototype,"selectAllCheckbox",{get:function(){return this._selectAllCheckbox},set:function(e){this._selectAllCheckbox=e,this._onSelectAllChanged(e)},enumerable:!0,configurable:!0}),e.prototype._onSelectAllChanged=function(t){this.rows.toArray().forEach(function(e){return e.selected=t})},e.prototype.onRowSelectChanged=function(t){if(this.multiSelect){var e=this.selectedRows.indexOf(t);t.selected&&e<0?this.selectedRows.push(t):!t.selected&&0<=e&&this.selectedRows.splice(e,1)}else t.selected?this.selectedRow=t:this.selectedRow===t&&delete this.selectedRow;t.selected&&!this.multiSelect&&this.rows.toArray().filter(function(e){return e.selected}).forEach(function(e){e!==t&&(e.selected=!1)})},Object.defineProperty(e.prototype,"substituteItems",{get:function(){return Array.from({length:this.displayParams.limit-this.items.length})},enumerable:!0,configurable:!0}),e.prototype.resizeColumnStart=function(e,n,a){var i=this;this._resizeInProgress=!0;var l=a.offsetWidth-e.pageX;!function u(a,e){var i=e.move,t=e.up,n=a.pageX,l=a.pageY,o=n,r=l,s=!1;function d(e){var t=e.pageX-o,n=e.pageY-r;o=e.pageX,r=e.pageY,(t||n)&&(s=!0),i(e,t,n,o,r),a.preventDefault()}document.addEventListener("mousemove",d),document.addEventListener("mouseup",function c(e){o=e.pageX,r=e.pageY,document.removeEventListener("mousemove",d),document.removeEventListener("mouseup",c),t&&t(a,o,r,s)})}(e,{move:function(e,t){i._isResizeInLimit(a,t)&&(n.width=l+e.pageX+t)}})},e.prototype._isResizeInLimit=function(e,t){return!(t<0&&e.offsetWidth+t<=this.resizeLimit||!e.nextElementSibling||0<=t&&e.nextElementSibling.offsetWidth+t<=this.resizeLimit)},e.prototype.ngAfterContentInit=function(){""===this.primaryColumn&&(this.primaryColumn=this.columns.first.property)},e.prototype._notify=function(){var t=this,e=this.reloading;if(this.reloadNotification=e?this.labels.loadingText.replace("{title}",this.title):this.labels.loadedText.replace("{title}",this.title),!e)if(this.pagination?this.paginationNotification=this.labels.paginationText.replace("{from}",""+(0!==Math.ceil(this.itemCount/this.limit)?this.offset+1:"0")).replace("{to}",""+Math.min(this.offset+this.limit,this.itemCount)).replace("{total}",""+this.itemCount):this.paginationNotification="",this.columns!==undefined&&this.sortBy!==undefined){var n=this.columns.toArray().find(function(e){return e.property===t.sortBy});this.sortNotification=(this.sortAsc?this.labels.sortedAscending:this.labels.sortedDescending).replace("{title}",this.title).replace("{header}",n.header)}else this.sortNotification=""},e.prototype.ngOnDestroy=function(){this.subject$.unsubscribe(),this.notifier$.unsubscribe()},e}();E.decorators=[{type:a.Component,args:[{selector:"data-table",template:'<div class="data-table-wrapper">\n  <span class="sr-only" role="status" aria-live="polite" aria-atomic="false" aria-relevant="text">\n    <span [textContent]="reloadNotification"></span>\n    <span [textContent]="paginationNotification"></span>\n    <span [textContent]="sortNotification"></span>\n    <span [textContent]="columnSelectorNotification"></span>\n  </span>\n\n  <data-table-header *ngIf="header"></data-table-header>\n  <filter-bar *ngIf="filterableFields && filterableFields.length > 0"></filter-bar>\n\n  <div class="data-table-box {{tableContainerCssClass}}">\n    <table class="table data-table {{tableCssClass}}" [id]="id">\n      <caption class="sr-only" [textContent]="title"></caption>\n      <thead>\n      <tr>\n        <td [hide]="!expandColumnVisible" class="expand-column-header">\n        </td>\n        <th scope="col" [hide]="!indexColumnVisible" class="index-column-header">\n          <span [textContent]="indexColumnHeader"></span>\n        </th>\n        <td [hide]="!selectColumnVisible" class="select-column-header">\n          <input [hide]="!multiSelect"\n                 type="checkbox"\n                 [(ngModel)]="selectAllCheckbox"\n                 [disabled]="itemCount === 0"\n                 [title]="labels.selectAllRows"\n                 [attr.aria-label]="labels.selectAllRows"/>\n        </td>\n        <th *ngFor="let column of columns, index as i" #th\n            [hide]="!column.visible"\n            [class.sortable]="column.sortable"\n            [class.resizable]="column.resizable"\n            scope="col"\n            [attr.aria-sort]="column.sortable ? (column.property === sortBy ? (sortAsc ? \'ascending\' : \'descending\') : \'none\') : null"\n            [ngClass]="column.styleClassObject" class="column-header" [style.width]="column.width | px" >\n          <button *ngIf="column.sortable" (click)="headerClicked(column, $event)"\n                  [attr.aria-controls]="column.sortable ? id : null"\n                  [disabled]="itemCount === 0"\n                  [attr.aria-labelledby]="\'col-\'+id+\'-\'+i"\n                  [title]="!sortAsc ? labels.sortAscending : labels.sortDescending">\n            <span *ngIf="!column.headerTemplate" [id]="\'col-\'+id+\'-\'+i"\n                  [textContent]="column.header"></span>\n            <span *ngIf="column.headerTemplate" [ngTemplateOutlet]="column.headerTemplate"\n                  [ngTemplateOutletContext]="{column: column}"></span>\n            <span class="column-sort-icon" *ngIf="column.sortable">\n              <i [hide]="column.property === sortBy" class="fa fa-sort column-sortable-icon"\n                aria-hidden="true"></i>\n              <i [hide]="column.property !== sortBy" class="fa"\n                [ngClass]="{\'fa-sort-asc\': sortAsc, \'fa-sort-desc\': !sortAsc}" aria-hidden="true"></i>\n            </span>\n            <span *ngIf="column.resizable" class="column-resize-handle"\n                  (mousedown)="resizeColumnStart($event, column, th)"></span>\n          </button>\n          <span *ngIf="!column.sortable">\n            <span *ngIf="!column.headerTemplate"\n                  [textContent]="column.header"></span>\n            <span *ngIf="column.headerTemplate" [ngTemplateOutlet]="column.headerTemplate"\n                  [ngTemplateOutletContext]="{column: column}"></span>\n            <span class="column-sort-icon" *ngIf="column.sortable">\n               <i [hide]="column.property === sortBy" class="fa fa-sort column-sortable-icon"\n                  aria-hidden="true"></i>\n               <i [hide]="column.property !== sortBy" class="fa"\n                  [ngClass]="{\'fa-sort-asc\': sortAsc, \'fa-sort-desc\': !sortAsc}" aria-hidden="true"></i>\n            </span>\n            <span *ngIf="column.resizable" class="column-resize-handle"\n                  (mousedown)="resizeColumnStart($event, column, th)"></span>\n          </span>\n        </th>\n      </tr>\n      </thead>\n      <tbody *ngFor="let item of items; let index=index" class="data-table-row-wrapper"\n             dataTableRow #row [item]="item" [index]="index" (selectedChange)="onRowSelectChanged(row)">\n      </tbody>\n      <tbody *ngIf="itemCount === 0 && noDataMessage">\n        <tr>\n          <td [attr.colspan]="columnCount">{{ noDataMessage }}</td>\n        </tr>\n      </tbody>\n      <tbody class="substitute-rows" *ngIf="pagination && substituteRows">\n      <tr *ngFor="let item of substituteItems, let index = index"\n          [class.row-odd]="(index + items.length) % 2 === 0"\n          [class.row-even]="(index + items.length) % 2 === 1" role="presentation">\n        <td [hide]="!expandColumnVisible"></td>\n        <td [hide]="!indexColumnVisible">&nbsp;</td>\n        <td [hide]="!selectColumnVisible"></td>\n        <td *ngFor="let column of columns" [hide]="!column.visible">\n      </tr>\n      </tbody>\n    </table>\n    <div class="busy" *ngIf="showReloading && reloading">\n      <i><i class="fa fa-spin fa-cog fa-2x"></i></i>\n    </div>\n  </div>\n\n  <data-table-pagination *ngIf="pagination" [limits]="pageLimits"></data-table-pagination>\n</div>\n',styles:[":host /deep/ .data-table.table>tbody+tbody{border-top:none}:host /deep/ .data-table.table td{vertical-align:middle}:host /deep/ .data-table>tbody>tr>td,:host /deep/ .data-table>thead>tr>th{overflow:hidden}:host /deep/ .data-table>thead>tr>td{border-bottom:2px solid #dee2e6}:host /deep/ .row-odd{background-color:#f6f6f6}.data-table .substitute-rows>tr:hover,:host /deep/ .data-table .data-table-row:hover{background-color:#ececec}.data-table{-webkit-box-shadow:0 0 15px #ececec;box-shadow:0 0 15px #ececec;table-layout:fixed}.column-header{position:relative}.expand-column-header{width:50px}.select-column-header{width:50px;text-align:center}.index-column-header{width:40px}.column-header.sortable button{-webkit-box-sizing:content-box;box-sizing:content-box;background:0 0;border:0;color:inherit;cursor:pointer;font:inherit;line-height:normal;overflow:visible;padding:0;-webkit-appearance:button;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;text-align:left}.column-header .column-sort-icon{margin-left:8px}.column-header.resizable .column-sort-icon{margin-right:8px}.column-header .column-sort-icon .column-sortable-icon{color:#d3d3d3}.column-header .column-resize-handle{position:absolute;top:0;right:0;margin:0;padding:0;width:8px;height:100%;cursor:col-resize}.data-table-box{position:relative}.busy{position:absolute;z-index:1;top:0;bottom:0;left:0;right:0;background-color:rgba(0,0,0,.25)}.busy>i{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}"]}]}],E.ctorParameters=function(){return[]},E.propDecorators={items:[{type:a.Input}],itemCount:[{type:a.Input}],columns:[{type:a.ContentChildren,args:[O]}],rows:[{type:a.ViewChildren,args:[_]}],expandTemplate:[{type:a.ContentChild,args:["dataTableExpand"]}],title:[{type:a.Input}],showTitle:[{type:a.Input}],header:[{type:a.Input}],pagination:[{type:a.Input}],indexColumn:[{type:a.Input}],indexColumnHeader:[{type:a.Input}],rowColors:[{type:a.Input}],rowTooltip:[{type:a.Input}],filterableFields:[{type:a.Input}],filters:[{type:a.Input}],selectColumn:[{type:a.Input}],multiSelect:[{type:a.Input}],substituteRows:[{type:a.Input}],expandableRows:[{type:a.Input}],labels:[{type:a.Input}],selectOnRowClick:[{type:a.Input}],autoReload:[{type:a.Input}],showReloading:[{type:a.Input}],noDataMessage:[{type:a.Input}],pageLimits:[{type:a.Input}],primaryColumn:[{type:a.Input}],tableCssClass:[{type:a.Input}],tableContainerCssClass:[{type:a.Input}],reload:[{type:a.Output}],rowClick:[{type:a.Output}],rowDoubleClick:[{type:a.Output}],headerClick:[{type:a.Output}],cellClick:[{type:a.Output}],refreshClick:[{type:a.Output}],filterAdded:[{type:a.Output,args:["filterAdded"]}],filterRemoved:[{type:a.Output,args:["filterRemoved"]}],filterUpdated:[{type:a.Output,args:["filterUpdated"]}],filterChanged:[{type:a.Output,args:["filterChanged"]}],sortBy:[{type:a.Input}],sortAsc:[{type:a.Input}],offset:[{type:a.Input}],limit:[{type:a.Input}],page:[{type:a.Input}]};var M=function(){function e(e,t){this.dataTable=e,this.elemRef=t,this.columnSelectorOpen=!1}return e.prototype.onClickHandler=function(e){this.elemRef.nativeElement.contains(e.target)||(this.columnSelectorOpen=!1)},e.prototype.onKeyUpHandler=function(e){(27===e.keyCode||9===e.keyCode&&!this.elemRef.nativeElement.contains(e.target))&&(this.columnSelectorOpen=!1)},e.prototype.onChange=function(e){var t=e.target.checked,n={column_name:e.target.parentElement.textContent.trim(),title:this.dataTable.title};this.dataTable.columnSelectorNotification=(t?this.dataTable.labels.headerColumnSelectorAdded:this.dataTable.labels.headerColumnSelectorRemoved).replace("{column_name}",n.column_name).replace("{title}",n.title)},e}();M.decorators=[{type:a.Component,args:[{selector:"data-table-header",template:'<div class="data-table-header">\n  <p class="h4 title" *ngIf="dataTable.showTitle" [textContent]="dataTable.title"></p>\n  <div class="button-panel">\n    <button type="button" class="btn btn-default btn-sm refresh-button"\n            (click)="dataTable.refreshClick.emit()"\n            [title]="dataTable.labels.headerReload.replace(\'{title}\', dataTable.title)">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </button>\n    <button type="button" class="btn btn-default btn-sm column-selector-button" [class.active]="columnSelectorOpen"\n            [attr.aria-haspopup]="true"\n            [attr.aria-expanded]="columnSelectorOpen"\n            (click)="columnSelectorOpen = !columnSelectorOpen;"\n            [title]="dataTable.labels.headerColumnSelector.replace(\'{title}\', dataTable.title)">\n      <i class="fa fa-list" aria-hidden="true"></i>\n    </button>\n    <div class="column-selector-wrapper">\n      <div *ngIf="columnSelectorOpen" class="column-selector-box panel panel-default">\n        <ul class="list-group list-group-flush">\n          <li *ngIf="dataTable.expandableRows" class="list-group-item column-selector-column checkbox">\n            <label class="d-flex align-items-center">\n              <input type="checkbox" [(ngModel)]="dataTable.expandColumnVisible" (change)="onChange($event)" [attr.aria-controls]="dataTable.id"/>\n              <span [textContent]="dataTable.labels.expandColumn"></span>\n            </label>\n          </li>\n          <li *ngIf="dataTable.indexColumn" class="list-group-item column-selector-column checkbox">\n            <label class="d-flex align-items-center">\n              <input type="checkbox" [(ngModel)]="dataTable.indexColumnVisible" (change)="onChange($event)" [attr.aria-controls]="dataTable.id"/>\n              <span [textContent]="dataTable.labels.indexColumn"></span>\n            </label>\n          </li>\n          <li *ngIf="dataTable.selectColumn" class="list-group-item column-selector-column checkbox">\n            <label class="d-flex align-items-center">\n              <input type="checkbox" [(ngModel)]="dataTable.selectColumnVisible" (change)="onChange($event)" [attr.aria-controls]="dataTable.id"/>\n              <span [textContent]="dataTable.labels.selectColumn"></span>\n            </label>\n          </li>\n          <ng-template ngFor let-item let-i="index" [ngForOf]="dataTable.columns">\n            <li class="list-group-item column-selector-column checkbox"\n                *ngIf="dataTable.primaryColumn !== item.property">\n              <label class="d-flex align-items-center">\n                <input type="checkbox" [(ngModel)]="item.visible" (change)="onChange($event)" [attr.aria-controls]="dataTable.id"/>\n                <span [textContent]="item.header"></span>\n              </label>\n            </li>\n          </ng-template>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n',styles:[".data-table-header{min-height:25px;margin-bottom:10px}.title{display:inline-block;margin:5px 0 0 5px}.button-panel{float:right}.button-panel button{outline:0!important}.column-selector-wrapper{position:relative}.column-selector-box{-webkit-box-shadow:0 0 10px #d3d3d3;box-shadow:0 0 10px #d3d3d3;background:#fff;width:150px;padding:10px;position:absolute;right:0;top:1px;z-index:1060}.column-selector-box .list-group-item.column-selector-column{padding:.5rem .25rem}.column-selector-box .list-group-item.column-selector-column label{margin-bottom:0}.column-selector-box .list-group-item.column-selector-column input{margin-right:4px;font-style:italic}"]}]}],M.ctorParameters=function(){return[{type:E,decorators:[{type:a.Inject,args:[a.forwardRef(function(){return E})]}]},{type:a.ElementRef}]},M.propDecorators={onClickHandler:[{type:a.HostListener,args:["document:click",["$event"]]}],onKeyUpHandler:[{type:a.HostListener,args:["document:keyup",["$event"]]}]};var D=0,P=function(){function e(e){this.dataTable=e,this.id="pagination-"+D++,this.Math=Math}return e.prototype.pageBack=function(){this.dataTable.offset-=Math.min(this.dataTable.limit,this.dataTable.offset),this.dataTable.offset<=0&&this.pageInput.nativeElement.focus()},e.prototype.pageForward=function(){this.dataTable.offset+=this.dataTable.limit,this.dataTable.offset+this.dataTable.limit>=this.dataTable.itemCount&&this.pageInput.nativeElement.focus()},e.prototype.pageFirst=function(){this.dataTable.offset=0,this.pageInput.nativeElement.focus()},e.prototype.pageLast=function(){this.dataTable.offset=(this.maxPage-1)*this.dataTable.limit,this.dataTable.offset+this.dataTable.limit>=this.dataTable.itemCount&&this.pageInput.nativeElement.focus()},Object.defineProperty(e.prototype,"maxPage",{get:function(){return Math.ceil(this.dataTable.itemCount/this.dataTable.limit)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"limit",{get:function(){return this.dataTable.limit},set:function(e){this.dataTable.limit=+e,this.page=1},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"page",{get:function(){return this.dataTable.page},set:function(e){this.dataTable.page=+e},enumerable:!0,configurable:!0}),e.prototype.validate=function(e){var t=+e.target.value;t!==this.page&&(this.page=e.target.value>this.maxPage?this.maxPage:t<1?1:t,e.target.value=this.page)},e}();P.decorators=[{type:a.Component,args:[{selector:"data-table-pagination",template:'<div class="d-flex justify-content-between align-items-center">\n  <div class="pagination-range">\n    <span [textContent]="dataTable.labels.paginationText\n        .replace(\'{from}\', this.Math.ceil(dataTable.itemCount / dataTable.limit) !== 0 ? dataTable.offset + 1 + \'\' : \'0\')\n        .replace(\'{to}\', this.Math.min(dataTable.offset + dataTable.limit, dataTable.itemCount) + \'\')\n        .replace(\'{total}\', dataTable.itemCount + \'\')"></span>\n  </div>\n  <div class="pagination-controllers pagination-box d-flex justify-content-between">\n    <div class="pagination-limit d-flex justify-content-between">\n      <div class="input-group">\n        <div class="input-group-prepend">\n          <label [attr.for]="id + \'-page-limit\'" class="input-group-text" [textContent]="dataTable.labels.paginationLimit"></label>\n        </div>\n        <select [id]="id + \'-page-limit\'" class="form-control" [(ngModel)]="limit" [disabled]="dataTable.itemCount === 0">\n          <option *ngFor="let l of limits" [value]="l">{{ l }}</option>\n        </select>\n      </div>\n    </div>\n    <div class="pagination-pages d-flex justify-content-between">\n      <button [disabled]="dataTable.offset <= 0"\n              (click)="pageFirst()"\n              class="btn btn-default pagination-firstpage"\n              [title]="dataTable.labels.firstPage"\n              [attr.aria-controls]="dataTable.id">\n        <i class="fa fa-angle-double-left" aria-hidden="true"></i>\n      </button>\n      <button [disabled]="dataTable.offset <= 0"\n              (click)="pageBack()"\n              class="btn btn-default pagination-prevpage"\n              [title]="dataTable.labels.prevPage"\n              [attr.aria-controls]="dataTable.id">\n        <i class="fa fa-angle-left" aria-hidden="true"></i>\n      </button>\n      <div class="pagination-page">\n        <div class="input-group">\n          <div class="input-group-prepend">\n            <label class="input-group-text" [attr.for]="id + \'-page-input\'">\n              {{ dataTable.labels.pageNumberLabel }}\n            </label>\n          </div>\n          <input #pageInput type="number"\n                 [id]="id + \'-page-input\'"\n                 class="form-control" min="1" step="1" max="{{maxPage}}"\n                 [disabled]="dataTable.itemCount === 0"\n                 [ngModel]="page"\n                 (blur)="validate($event)"\n                 (keyup.enter)="validate($event)"\n                 (keyup.esc)="pageInput.value = page"\n                 [title]="dataTable.labels.pageNumber + \' \' +\n                    dataTable.labels.pageNumberNofM.replace(\'{N}\', \'\'+page).replace(\'{M}\', \'\'+maxPage)"\n                 [attr.aria-controls]="dataTable.id"/>\n          <div class="input-group-append">\n            <span class="input-group-text">\n              {{ dataTable.labels.paginationTotalPages }}&nbsp;{{ dataTable.lastPage }}\n            </span>\n          </div>\n        </div>\n      </div>\n      <button [disabled]="(dataTable.offset + dataTable.limit) >= dataTable.itemCount"\n              (click)="pageForward()"\n              class="btn btn-default pagination-nextpage"\n              [title]="dataTable.labels.nextPage"\n              [attr.aria-controls]="dataTable.id">\n        <i class="fa fa-angle-right" aria-hidden="true"></i>\n      </button>\n      <button [disabled]="(dataTable.offset + dataTable.limit) >= dataTable.itemCount"\n              (click)="pageLast()"\n              class="btn btn-default pagination-lastpage"\n              [title]="dataTable.labels.lastPage"\n              [attr.aria-controls]="dataTable.id">\n        <i class="fa fa-angle-double-right" aria-hidden="true"></i>\n      </button>\n    </div>\n  </div>\n</div>\n',styles:[".pagination-controllers select{min-width:5rem;text-align:right}.pagination-pages>*{margin:0 .15rem}.pagination-limit{margin-right:1.5rem}.pagination-box button{outline:0!important}"]}]}],P.ctorParameters=function(){return[{type:E,decorators:[{type:a.Inject,args:[a.forwardRef(function(){return E})]}]}]},P.propDecorators={pageInput:[{type:a.ViewChild,args:["pageInput"]}],limits:[{type:a.Input}]};var A=function(){function e(e,t){this._dialogCloser=e,this.data=t,this.fieldSearchQuery="",this.filteredFields=t.fields}return e.prototype.ngOnInit=function(){},e.prototype.ngAfterViewInit=function(){this.keyboardEventsManager=new o.ListKeyManager(this.listItem)},e.prototype.onFieldSearch=function(t){this.filteredFields=this.data.fields.filter(function(e){return-1!=e.header.toLowerCase().indexOf(t.toLowerCase())})},e.prototype.fieldSelected=function(e){this._dialogCloser(e)},e.prototype.handleKeyDown=function(e){if(e.stopImmediatePropagation(),this.keyboardEventsManager){if(e.keyCode===r.DOWN_ARROW||e.keyCode===r.UP_ARROW){this.keyboardEventsManager.onKeydown(e);var t=this.keyboardEventsManager.activeItem;return t==this.activeItem&&(e.keyCode===r.DOWN_ARROW?this.keyboardEventsManager.setFirstItemActive():this.keyboardEventsManager.setLastItemActive(),t=this.keyboardEventsManager.activeItem),this.activeItem=t,this.keyboardEventsManager.activeItem._getHostElement().scrollIntoView(),!1}if(e.keyCode===r.ENTER)return this.keyboardEventsManager.activeItem._getHostElement().click(),!1}},e}();A.decorators=[{type:a.Component,args:[{selector:"app-field-filter-chooser-popup-dialog",template:'<div class="dialog-container">\n  <form class="search-field">\n    <mat-form-field>\n      <input autocomplete="off" matInput [placeholder]="data.labels.searchField" name="fieldSearchQuery" [ngModel]="fieldSearchQuery"\n        (ngModelChange)="onFieldSearch($event)" (keydown)="handleKeyDown($event)">\n    </mat-form-field>\n  </form>\n  <div class="fields-list">\n    <mat-nav-list>\n      <a tabindex="0" mat-list-item [class.active]="activeItem == listItem" #listItem *ngFor="let field of filteredFields"\n        (click)="fieldSelected(field)">{{field.header}}\n      </a>\n    </mat-nav-list>\n  </div>\n</div>\n',styles:[".dialog-container{padding-bottom:12px}.search-field{padding:12px 12px 0}.fields-list{max-height:250px;overflow-y:auto}::-webkit-scrollbar{width:6px;background-color:#f5f5f5}::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#d9d9d9}.mat-list-item.active{background:rgba(0,0,0,.04)}"]}]}],A.ctorParameters=function(){return[{type:Function,decorators:[{type:a.Inject,args:[l.POPUP_DIALOG_CLOSE]}]},{type:undefined,decorators:[{type:a.Inject,args:[i.MAT_DIALOG_DATA]}]}]},A.propDecorators={listItem:[{type:a.ViewChildren,args:["listItem"]}]};var S=function(){function e(){}return e.prototype.isErrorState=function(e,t){var n=t&&t.submitted;return!!(e&&e.invalid&&(e.dirty||e.touched||n))},e}(),V=function(){function n(e,t){if(this._dialogCloser=e,this.data=t,this.MUST_SELECT_VALUE_VALIDATION=this.data.labels.selectedValueRequired,this.valuesList=[],this.isAtleastOneValueSelected=!0,this.matcher=new S,this.dataType=this.data.fieldFilter.field.dataType,this.filterOperators=n.ALL_FILTER_OPERATORS[this.dataType],!this.filterOperators)throw"Data type '"+this.dataType+"' for field '"+this.data.fieldFilter.field.header+"' is not recognized";this.selectedOperator=this.data.fieldFilter.operator||this.filterOperators[0],this.filterValue="date"==this.dataType?this.toDate(this.data.fieldFilter.value):this.data.fieldFilter.value,"enum"==this.dataType&&(this.data.fieldFilter.value&&(this.valuesList=this.valuesList.concat(this.data.fieldFilter.value).filter(function(e){return null!=e})),this.isAtleastOneValueSelected=0!=this.valuesList.length),"bool"==this.dataType&&null==this.filterValue&&(this.filterValue=!0)}return n.prototype.ngOnInit=function(){},n.prototype.onFilterApply=function(){var e=this.filterValue;"empty"===this.selectedOperator?e=null:("date"==this.dataType&&(e=this.formatDate(e)),"enum"==this.dataType&&(e=this.valuesList)),this._dialogCloser({field:this.data.fieldFilter.field,operator:this.selectedOperator,value:e})},n.prototype.valueCheckChange=function(e,t){if(t)this.valuesList.push(e);else{var n=this.valuesList.indexOf(e);-1!=n&&this.valuesList.splice(n,1)}this.isAtleastOneValueSelected=0!=this.valuesList.length},n.prototype.isValueChecked=function(e){return-1!=this.valuesList.indexOf(e)},n.prototype.getErrorMessage=function(e){return e.hasError("matDatepickerParse")?this.data.labels.validDateRequired:e.hasError("required")?this.data.labels.valueRequired:e.hasError("pattern")?this.data.labels.numericValueRequired:""},n.prototype.getPossibleOptionValue=function(e){return"string"==typeof e?e:e.value},n.prototype.getPossibleOptionDisplayText=function(e){return"string"==typeof e?e:e.displayText},n.prototype.formatDate=function(e){return[e.getDate(),e.getMonth()+1,e.getFullYear()].join("/")},n.prototype.toDate=function(e){if(!e)return new Date;var t=e.split("/");return new Date(Number(t[2]),Number(t[1])-1,Number(t[0]))},n}();V.numericOperators=["lt","gt","lte","gte","eq","ne","empty"],V.textualOperators=["contains","not_contains","starts","ends","eq","ne","empty"],V.enumOperators=["eq","ne","empty"],V.boolOperators=["eq"],V.ALL_FILTER_OPERATORS={number:V.numericOperators,date:V.numericOperators,text:V.textualOperators,"enum":V.enumOperators,bool:V.boolOperators},V.decorators=[{type:a.Component,args:[{selector:"app-field-filter-popup-dialog",template:'<div>\n  <form #f="ngForm" (ngSubmit)="((f.valid && isAtleastOneValueSelected) || selectedOperator == \'empty\') && onFilterApply()">\n    <div class="header">\n      <span class="field-label">{{data.fieldFilter.field.header}}</span>\n      <button mat-dialog-close class="icon-button" mat-icon-button>\n        <mat-icon aria-label="close">close</mat-icon>\n      </button>\n    </div>\n    <div class="content">\n      <div class="filter-operator">\n        <div class="mat-auto-width">\n          <mat-form-field>\n            <mat-select [(value)]="selectedOperator">\n              <mat-option *ngFor="let operator of filterOperators" [value]="operator">\n                {{data.labels.filterOperators[operator]}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class="ml-2 mat-auto-width">\n        <ng-container *ngIf="dataType == \'number\' && selectedOperator !== \'empty\'">\n          <ng-container *ngTemplateOutlet="numericField"></ng-container>\n        </ng-container>\n        <ng-container *ngIf="dataType == \'date\' && selectedOperator !== \'empty\'">\n          <ng-container *ngTemplateOutlet="dateField"></ng-container>\n        </ng-container>\n        <ng-container *ngIf="dataType == \'text\' && selectedOperator !== \'empty\'">\n          <ng-container *ngTemplateOutlet="textField"></ng-container>\n        </ng-container>\n        <ng-container *ngIf="dataType == \'enum\' && selectedOperator !== \'empty\'">\n          <ng-container *ngTemplateOutlet="valuesListField; context: {options: data.fieldFilter.field.possibleOptions, form: f}"></ng-container>\n        </ng-container>\n        <ng-container *ngIf="dataType == \'bool\' && selectedOperator !== \'empty\'">\n          <ng-container *ngTemplateOutlet="booleanField"></ng-container>\n        </ng-container>\n      </div>\n    </div>\n    <div class="footer">\n      <button type="submit" class="mx-1" mat-button>{{data.labels.apply}}</button>\n    </div>\n\n\n    <ng-template #dateField>\n      <mat-form-field hideRequiredMarker="true" floatLabel="never">\n        <input cdkFocusInitial autocomplete="off" matInput [errorStateMatcher]="matcher" #filterValueInput="ngModel" name="filterValue"\n          [(ngModel)]="filterValue" [matDatepicker]="picker" [placeholder]="data.labels.date" class="ltr" required>\n        <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n        <mat-datepicker #picker panelClass="field-filter-popup-value-panel"></mat-datepicker>\n        <mat-error *ngIf="filterValueInput && filterValueInput.invalid">{{getErrorMessage(filterValueInput)}}</mat-error>\n      </mat-form-field>\n    </ng-template>\n\n    <ng-template #numericField>\n      <mat-form-field hideRequiredMarker="true" floatLabel="never">\n        <input cdkFocusInitial autocomplete="off" matInput [placeholder]="data.labels.value" [errorStateMatcher]="matcher"\n          #filterValueInput="ngModel" name="filterValue" [(ngModel)]="filterValue" required pattern="^[0-9]+(.?[0-9]+)?$">\n        <mat-error *ngIf="filterValueInput && filterValueInput.invalid">{{getErrorMessage(filterValueInput)}}</mat-error>\n      </mat-form-field>\n    </ng-template>\n\n    <ng-template #valuesListField let-options="options" let-operator="operator" let-f="form">\n      <div class="py-3">\n        <mat-checkbox class="d-block" *ngFor="let option of options" [checked]="isValueChecked(option)" (change)="valueCheckChange(option, $event.checked)">{{getPossibleOptionDisplayText(option)}}</mat-checkbox>\n        <mat-error *ngIf="f.submitted && !isAtleastOneValueSelected">{{MUST_SELECT_VALUE_VALIDATION}}</mat-error>\n      </div>\n    </ng-template>\n\n    <ng-template #booleanField>\n      <div class="py-3">\n        \x3c!-- Workaround to focus radio buttons --\x3e\n        <input style="width: 0px; height: 0px;" cdkFocusInitial (focus)="filterValue == false ? radioButtonFalse.focus() : radioButtonTrue.focus()" autocomplete="off" matInput>\n        <mat-radio-group [(ngModel)]="filterValue" name="filterValue">\n          <mat-radio-button #radioButtonTrue class="mr-3" [value]="true"><mat-icon class="mt-1">check</mat-icon></mat-radio-button>\n          <mat-radio-button #radioButtonFalse [value]="false"><mat-icon class="mt-1">close</mat-icon></mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </ng-template>\n\n    <ng-template #textField>\n      <mat-form-field hideRequiredMarker="true" floatLabel="never">\n        <input cdkFocusInitial autocomplete="off" matInput [placeholder]="data.labels.value" [errorStateMatcher]="matcher"\n          #filterValueInput="ngModel" name="filterValue" [(ngModel)]="filterValue" required>\n        <mat-error *ngIf="filterValueInput && filterValueInput.invalid">{{getErrorMessage(filterValueInput)}}</mat-error>\n      </mat-form-field>\n    </ng-template>\n\n  </form>\n</div>\n',styles:[".header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;background:#3367d6;border-radius:2px 2px 0 0;color:#fff;font-size:15px;min-width:176px;padding:8px}.field-label{padding:0 8px}.icon-button{outline:0}.content{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;overflow:hidden;padding:24px;min-width:200px;max-height:200px;overflow-y:auto}.footer{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;color:#4285f4;padding:8px 0}::ng-deep .mat-select-value{min-width:24px!important}.mat-auto-width ::ng-deep .mat-form-field{width:auto!important}.mat-auto-width ::ng-deep .mat-form-field-infix{width:auto!important}.mat-auto-width ::ng-deep .mat-select-value{max-width:100%;width:auto}::ng-deep .mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:#4285f4}.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background,::ng-deep .mat-checkbox-checked.mat-accent .mat-checkbox-background{background-color:#4285f4}::ng-deep .mat-radio-button.mat-accent .mat-radio-inner-circle{background-color:#4285f4}::ng-deep .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle{border-color:#4285f4}::ng-deep .mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element{background-color:rgba(66,133,244,.26)!important}::-webkit-scrollbar{width:6px;background-color:#f5f5f5}::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#d9d9d9}.ltr{direction:ltr}"]}]}],V.ctorParameters=function(){return[{type:Function,decorators:[{type:a.Inject,args:[l.POPUP_DIALOG_CLOSE]}]},{type:undefined,decorators:[{type:a.Inject,args:[i.MAT_DIALOG_DATA]}]}]};var L=function(){function e(e,t){this.dataTable=e,this.popupDialogService=t,this.filters=[],this.fields=this.dataTable.filterableFields,e.filters&&(this.filters=e.filters)}return e.prototype.ngOnInit=function(){},e.prototype.inputFocused=function(e){e.currentTarget.blur(),this.openFieldChooserDialog(e.currentTarget)},e.prototype.chipClicked=function(e,n){var a=this;this.openFieldFilterDialog(e.currentTarget,n).afterClosed().subscribe(function(e){if(e){a.dataTable.filterUpdated.emit({old:a.convertFilterToEmittedFilter(n),"new":a.convertFilterToEmittedFilter(e)});var t=a.filters.indexOf(n);a.filters[t]=e,a.dataTable.filterChanged.emit(a.filters.map(function(e){return a.convertFilterToEmittedFilter(e)})),n=e}})},e.prototype.openFieldChooserDialog=function(t){var n=this;this.fieldChooserDialogRef||(this.fieldChooserDialogRef=this.popupDialogService.open(A,t,{coverTriggeringElement:!0,data:{fields:this.fields,labels:this.dataTable.labels}}),this.fieldChooserDialogRef.afterClosed().subscribe(function(e){(n.fieldChooserDialogRef=null,e)&&n.openFieldFilterDialog(t,{field:e}).afterClosed().subscribe(function(e){e&&(n.filters.push(e),n.dataTable.filterAdded.emit(n.convertFilterToEmittedFilter(e)),n.dataTable.filterChanged.emit(n.filters.map(function(e){return n.convertFilterToEmittedFilter(e)})))})}))},e.prototype.openFieldFilterDialog=function(e,t){return this.popupDialogService.open(V,e,{suppressCloseOnClickSelectors:[".cdk-overlay-container"],coverTriggeringElement:!0,data:{fieldFilter:t,labels:this.dataTable.labels}})},e.prototype.removeFilter=function(e){var t=this,n=this.filters.indexOf(e);0<=n&&(this.filters.splice(n,1),this.dataTable.filterRemoved.emit(this.convertFilterToEmittedFilter(e)),this.dataTable.filterChanged.emit(this.filters.map(function(e){return t.convertFilterToEmittedFilter(e)})))},e.prototype.formatValue=function(e){var t=e.value;return"empty"==e.operator?"":("enum"==e.field.dataType&&(t=e.value.map(function(e){return"string"==typeof e?e:e.displayText})),Array.isArray(t)&&(t=t.join(", ")),t)},e.prototype.formatChipDisplayText=function(e){return"bool"==e.field.dataType?0==e.value?this.dataTable.labels.not+" "+e.field.header:e.field.header:e.field.header+" "+this.dataTable.labels.filterOperators[e.operator]+" "+this.formatValue(e)},e.prototype.convertFilterToEmittedFilter=function(e){var t=JSON.parse(JSON.stringify(e));if("empty"==t.operator)return t;if("enum"==t.field.dataType)for(var n=t.value,a=0;a<n.length;a++){var i=n[a];n[a]="string"==typeof i?i:i.value}return t},e}();L.decorators=[{type:a.Component,args:[{selector:"filter-bar",template:'<div class="filter-bar">\n    <div class="px-2 pb-2">\n      <mat-chip-list #chipList>\n        <i class="fa fa-filter fa-2x filter-icon mr-1" (click)="filterInput.click()"></i>\n        <mat-chip *ngFor="let filter of filters" (click)="chipClicked($event, filter)" [removable]="true" (removed)="removeFilter(filter)">\n          {{formatChipDisplayText(filter)}}\n          <mat-icon matChipRemove>cancel</mat-icon>\n        </mat-chip>\n        <input #filterInput autocomplete="off" class="filter-input" [placeholder]="dataTable.labels.addFilter" [matChipInputFor]="chipList" (focus)="inputFocused($event)">\n      </mat-chip-list>\n    </div>\n</div>\n',styles:[".filter-input{background-color:transparent;border:0;height:32px;outline:0;padding:0}.filter-icon{color:#3367d6;cursor:pointer}"]}]}],L.ctorParameters=function(){return[{type:E,decorators:[{type:a.Inject,args:[a.forwardRef(function(){return E})]}]},{type:l.PopupDialogService}]};var j=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[]}},e}();j.decorators=[{type:a.NgModule,args:[{declarations:[E,O,_,P,M,k,T,w,L,A,V],entryComponents:[A,V],imports:[s.CommonModule,d.FormsModule,{ngModule:l.NgxPopupDialogModule,providers:[l.PopupDialogService]},p.MatFormFieldModule,m.MatIconModule,i.MatDialogModule,u.MatChipsModule,f.MatInputModule,c.MatButtonModule,h.MatListModule,b.MatSelectModule,g.MatCheckboxModule,y.MatRadioModule,v.MatDatepickerModule,x.MatNativeDateModule],exports:[E,O]}]}],e.DataTableModule=j,e.DataTable=E,e.DataTableColumn=O,e.DataTableRow=_,e.DataTablePagination=P,e.DataTableHeader=M,e.DataTableResource=I,e.ɵe=A,e.ɵf=V,e.ɵd=L,e.ɵb=T,e.ɵc=w,e.ɵa=k,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=angular7-data-table.umd.min.js.map
