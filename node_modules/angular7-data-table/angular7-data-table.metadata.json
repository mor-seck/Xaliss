{"__symbolic":"module","version":4,"metadata":{"DataTableModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":48,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"DataTable"},{"__symbolic":"reference","name":"DataTableColumn"},{"__symbolic":"reference","name":"DataTableRow"},{"__symbolic":"reference","name":"DataTablePagination"},{"__symbolic":"reference","name":"DataTableHeader"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"}],"entryComponents":[{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":60,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":61,"character":4},{"ngModule":{"__symbolic":"reference","module":"ngx-popup-dialog","name":"NgxPopupDialogModule","line":63,"character":16},"providers":[{"__symbolic":"reference","module":"ngx-popup-dialog","name":"PopupDialogService","line":64,"character":18}]},{"__symbolic":"reference","module":"@angular/material/form-field","name":"MatFormFieldModule","line":66,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":67,"character":4},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":68,"character":4},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":69,"character":4},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":70,"character":4},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":71,"character":4},{"__symbolic":"reference","module":"@angular/material/list","name":"MatListModule","line":72,"character":4},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":73,"character":4},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":74,"character":4},{"__symbolic":"reference","module":"@angular/material/radio","name":"MatRadioModule","line":75,"character":4},{"__symbolic":"reference","module":"@angular/material/datepicker","name":"MatDatepickerModule","line":76,"character":4},{"__symbolic":"reference","module":"@angular/material/core","name":"MatNativeDateModule","line":77,"character":4}],"exports":[{"__symbolic":"reference","name":"DataTable"},{"__symbolic":"reference","name":"DataTableColumn"}]}]}],"members":{},"statics":{"forRoot":{"__symbolic":"function","parameters":[],"value":{"ngModule":{"__symbolic":"reference","name":"DataTableModule"},"providers":[]}}}},"DataTable":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":31,"character":1},"arguments":[{"selector":"data-table","template":"<div class=\"data-table-wrapper\">\n  <span class=\"sr-only\" role=\"status\" aria-live=\"polite\" aria-atomic=\"false\" aria-relevant=\"text\">\n    <span [textContent]=\"reloadNotification\"></span>\n    <span [textContent]=\"paginationNotification\"></span>\n    <span [textContent]=\"sortNotification\"></span>\n    <span [textContent]=\"columnSelectorNotification\"></span>\n  </span>\n\n  <data-table-header *ngIf=\"header\"></data-table-header>\n  <filter-bar *ngIf=\"filterableFields && filterableFields.length > 0\"></filter-bar>\n\n  <div class=\"data-table-box {{tableContainerCssClass}}\">\n    <table class=\"table data-table {{tableCssClass}}\" [id]=\"id\">\n      <caption class=\"sr-only\" [textContent]=\"title\"></caption>\n      <thead>\n      <tr>\n        <td [hide]=\"!expandColumnVisible\" class=\"expand-column-header\">\n        </td>\n        <th scope=\"col\" [hide]=\"!indexColumnVisible\" class=\"index-column-header\">\n          <span [textContent]=\"indexColumnHeader\"></span>\n        </th>\n        <td [hide]=\"!selectColumnVisible\" class=\"select-column-header\">\n          <input [hide]=\"!multiSelect\"\n                 type=\"checkbox\"\n                 [(ngModel)]=\"selectAllCheckbox\"\n                 [disabled]=\"itemCount === 0\"\n                 [title]=\"labels.selectAllRows\"\n                 [attr.aria-label]=\"labels.selectAllRows\"/>\n        </td>\n        <th *ngFor=\"let column of columns, index as i\" #th\n            [hide]=\"!column.visible\"\n            [class.sortable]=\"column.sortable\"\n            [class.resizable]=\"column.resizable\"\n            scope=\"col\"\n            [attr.aria-sort]=\"column.sortable ? (column.property === sortBy ? (sortAsc ? 'ascending' : 'descending') : 'none') : null\"\n            [ngClass]=\"column.styleClassObject\" class=\"column-header\" [style.width]=\"column.width | px\" >\n          <button *ngIf=\"column.sortable\" (click)=\"headerClicked(column, $event)\"\n                  [attr.aria-controls]=\"column.sortable ? id : null\"\n                  [disabled]=\"itemCount === 0\"\n                  [attr.aria-labelledby]=\"'col-'+id+'-'+i\"\n                  [title]=\"!sortAsc ? labels.sortAscending : labels.sortDescending\">\n            <span *ngIf=\"!column.headerTemplate\" [id]=\"'col-'+id+'-'+i\"\n                  [textContent]=\"column.header\"></span>\n            <span *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\"\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\n              <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\n                aria-hidden=\"true\"></i>\n              <i [hide]=\"column.property !== sortBy\" class=\"fa\"\n                [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\n            </span>\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\n          </button>\n          <span *ngIf=\"!column.sortable\">\n            <span *ngIf=\"!column.headerTemplate\"\n                  [textContent]=\"column.header\"></span>\n            <span *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\"\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\n               <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\n                  aria-hidden=\"true\"></i>\n               <i [hide]=\"column.property !== sortBy\" class=\"fa\"\n                  [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\n            </span>\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\n          </span>\n        </th>\n      </tr>\n      </thead>\n      <tbody *ngFor=\"let item of items; let index=index\" class=\"data-table-row-wrapper\"\n             dataTableRow #row [item]=\"item\" [index]=\"index\" (selectedChange)=\"onRowSelectChanged(row)\">\n      </tbody>\n      <tbody *ngIf=\"itemCount === 0 && noDataMessage\">\n        <tr>\n          <td [attr.colspan]=\"columnCount\">{{ noDataMessage }}</td>\n        </tr>\n      </tbody>\n      <tbody class=\"substitute-rows\" *ngIf=\"pagination && substituteRows\">\n      <tr *ngFor=\"let item of substituteItems, let index = index\"\n          [class.row-odd]=\"(index + items.length) % 2 === 0\"\n          [class.row-even]=\"(index + items.length) % 2 === 1\" role=\"presentation\">\n        <td [hide]=\"!expandColumnVisible\"></td>\n        <td [hide]=\"!indexColumnVisible\">&nbsp;</td>\n        <td [hide]=\"!selectColumnVisible\"></td>\n        <td *ngFor=\"let column of columns\" [hide]=\"!column.visible\">\n      </tr>\n      </tbody>\n    </table>\n    <div class=\"busy\" *ngIf=\"showReloading && reloading\">\n      <i><i class=\"fa fa-spin fa-cog fa-2x\"></i></i>\n    </div>\n  </div>\n\n  <data-table-pagination *ngIf=\"pagination\" [limits]=\"pageLimits\"></data-table-pagination>\n</div>\n","styles":[":host /deep/ .data-table.table>tbody+tbody{border-top:none}:host /deep/ .data-table.table td{vertical-align:middle}:host /deep/ .data-table>tbody>tr>td,:host /deep/ .data-table>thead>tr>th{overflow:hidden}:host /deep/ .data-table>thead>tr>td{border-bottom:2px solid #dee2e6}:host /deep/ .row-odd{background-color:#f6f6f6}.data-table .substitute-rows>tr:hover,:host /deep/ .data-table .data-table-row:hover{background-color:#ececec}.data-table{-webkit-box-shadow:0 0 15px #ececec;box-shadow:0 0 15px #ececec;table-layout:fixed}.column-header{position:relative}.expand-column-header{width:50px}.select-column-header{width:50px;text-align:center}.index-column-header{width:40px}.column-header.sortable button{-webkit-box-sizing:content-box;box-sizing:content-box;background:0 0;border:0;color:inherit;cursor:pointer;font:inherit;line-height:normal;overflow:visible;padding:0;-webkit-appearance:button;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;text-align:left}.column-header .column-sort-icon{margin-left:8px}.column-header.resizable .column-sort-icon{margin-right:8px}.column-header .column-sort-icon .column-sortable-icon{color:#d3d3d3}.column-header .column-resize-handle{position:absolute;top:0;right:0;margin:0;padding:0;width:8px;height:100%;cursor:col-resize}.data-table-box{position:relative}.busy{position:absolute;z-index:1;top:0;bottom:0;left:0;right:0;background-color:rgba(0,0,0,.25)}.busy>i{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}"]}]}],"members":{"items":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":138,"character":3}}]}],"itemCount":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":151,"character":3}}]}],"columns":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren","line":162,"character":3},"arguments":[{"__symbolic":"reference","name":"DataTableColumn"}]}]}],"rows":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":163,"character":3},"arguments":[{"__symbolic":"reference","name":"DataTableRow"}]}]}],"expandTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":164,"character":3},"arguments":["dataTableExpand"]}]}],"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":167,"character":3}}]}],"showTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":168,"character":3}}]}],"header":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":169,"character":3}}]}],"pagination":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":170,"character":3}}]}],"indexColumn":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":171,"character":3}}]}],"indexColumnHeader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":172,"character":3}}]}],"rowColors":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":173,"character":3}}]}],"rowTooltip":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":174,"character":3}}]}],"filterableFields":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":175,"character":3}}]}],"filters":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":176,"character":3}}]}],"selectColumn":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":177,"character":3}}]}],"multiSelect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":178,"character":3}}]}],"substituteRows":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":179,"character":3}}]}],"expandableRows":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":180,"character":3}}]}],"labels":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":181,"character":3}}]}],"selectOnRowClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":182,"character":3}}]}],"autoReload":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":183,"character":3}}]}],"showReloading":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":184,"character":3}}]}],"noDataMessage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":185,"character":3}}]}],"pageLimits":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":186,"character":3}}]}],"primaryColumn":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":187,"character":3}}]}],"tableCssClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":188,"character":3}}]}],"tableContainerCssClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":189,"character":3}}]}],"reload":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":192,"character":3}}]}],"rowClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":195,"character":3}}]}],"rowDoubleClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":196,"character":3}}]}],"headerClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":197,"character":3}}]}],"cellClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":198,"character":3}}]}],"refreshClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":199,"character":3}}]}],"filterAdded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":200,"character":3},"arguments":["filterAdded"]}]}],"filterRemoved":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":201,"character":3},"arguments":["filterRemoved"]}]}],"filterUpdated":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":202,"character":3},"arguments":["filterUpdated"]}]}],"filterChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":203,"character":3},"arguments":["filterChanged"]}]}],"sortBy":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":253,"character":3}}]}],"sortAsc":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":265,"character":3}}]}],"offset":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":277,"character":3}}]}],"limit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":289,"character":3}}]}],"page":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":300,"character":3}}]}],"sort":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"_initDefaultValues":[{"__symbolic":"method"}],"_initDefaultClickEvents":[{"__symbolic":"method"}],"reloadItems":[{"__symbolic":"method"}],"_onReloadFinished":[{"__symbolic":"method"}],"_updateDisplayParams":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor"}],"rowClicked":[{"__symbolic":"method"}],"rowDoubleClicked":[{"__symbolic":"method"}],"headerClicked":[{"__symbolic":"method"}],"cellClicked":[{"__symbolic":"method"}],"_getRemoteParameters":[{"__symbolic":"method"}],"sortColumn":[{"__symbolic":"method"}],"getRowColor":[{"__symbolic":"method"}],"_onSelectAllChanged":[{"__symbolic":"method"}],"onRowSelectChanged":[{"__symbolic":"method"}],"resizeColumnStart":[{"__symbolic":"method"}],"_isResizeInLimit":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"_notify":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DataTableColumn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":5,"character":1},"arguments":[{"selector":"data-table-column"}]}],"members":{"header":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"sortable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"resizable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"property":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"styleClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"cellColors":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"visible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"cellTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":24,"character":3},"arguments":["dataTableCell"]}]}],"headerTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":25,"character":3},"arguments":["dataTableHeader"]}]}],"getCellColor":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"_initCellClass":[{"__symbolic":"method"}]}},"DataTableRow":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":14,"character":1},"arguments":[{"selector":"[dataTableRow]","template":"<tr class=\"data-table-row\"\n    [title]=\"getTooltip()\"\n    [style.background-color]=\"dataTable.getRowColor(item, index, _this)\"\n    [class.row-odd]=\"index % 2 === 0\"\n    [class.row-even]=\"index % 2 === 1\"\n    [class.selected]=\"selected\"\n    [class.clickable]=\"dataTable.selectOnRowClick\">\n  <td [hide]=\"!dataTable.expandColumnVisible\">\n    <button (click)=\"expanded = !expanded; $event.stopPropagation()\" class=\"row-expand-button\"\n         [attr.aria-expanded]=\"expanded\"\n         [title]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\n         [attr.aria-label]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\">\n      <i [ngClass]=\"{'fa-caret-right': !expanded, 'fa-caret-down': expanded}\" class=\"fa fa-lg\" aria-hidden=\"true\"></i>\n    </button>\n  </td>\n  <td [hide]=\"!dataTable.indexColumnVisible\" class=\"index-column\" [textContent]=\"displayIndex\"></td>\n  <td [hide]=\"!dataTable.selectColumnVisible\" class=\"select-column\">\n    <input type=\"checkbox\" [(ngModel)]=\"selected\"\n           [title]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\n           [attr.aria-label]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"/>\n  </td>\n  <ng-template ngFor [ngForOf]=\"dataTable.columns\" let-column>\n    <th *ngIf=\"dataTable.primaryColumn === column.property\" scope=\"row\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n        class=\"data-column\" [attr.data-label]=\"column.header\"\n        [style.background-color]=\"column.getCellColor(_this, index)\">\n      <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n      <div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n           [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\n    </th>\n    <td *ngIf=\"dataTable.primaryColumn !== column.property\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n        class=\"data-column\" [attr.data-label]=\"column.header\"\n        [style.background-color]=\"column.getCellColor(_this, index)\">\n      <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n      <div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n           [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\n    </td>\n  </ng-template>\n</tr>\n<tr *ngIf=\"dataTable.expandableRows\" [hide]=\"!expanded\" class=\"row-expansion\">\n  <td [attr.colspan]=\"dataTable.columnCount\">\n    <div [ngTemplateOutlet]=\"dataTable.expandTemplate\" [ngTemplateOutletContext]=\"{row: _this, item: item}\"></div>\n  </td>\n</tr>\n","styles":[".select-column{text-align:center}.row-expand-button{-webkit-box-sizing:content-box;box-sizing:content-box;background:0 0;border:0;color:inherit;cursor:pointer;font:inherit;line-height:normal;overflow:visible;padding:.15rem .75rem;-webkit-appearance:button;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}.clickable{cursor:pointer}th{font-weight:initial}"]}]}],"members":{"item":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":66,"character":3}}]}],"index":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":67,"character":3}}]}],"selectedChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":76,"character":3}}]}],"getTooltip":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":103,"character":15},"arguments":[{"__symbolic":"reference","name":"DataTable"}]}],null,null],"parameters":[{"__symbolic":"reference","name":"DataTable"},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":104,"character":32},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":104,"character":63}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DataTablePagination":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":12,"character":1},"arguments":[{"selector":"data-table-pagination","template":"<div class=\"d-flex justify-content-between align-items-center\">\n  <div class=\"pagination-range\">\n    <span [textContent]=\"dataTable.labels.paginationText\n        .replace('{from}', this.Math.ceil(dataTable.itemCount / dataTable.limit) !== 0 ? dataTable.offset + 1 + '' : '0')\n        .replace('{to}', this.Math.min(dataTable.offset + dataTable.limit, dataTable.itemCount) + '')\n        .replace('{total}', dataTable.itemCount + '')\"></span>\n  </div>\n  <div class=\"pagination-controllers pagination-box d-flex justify-content-between\">\n    <div class=\"pagination-limit d-flex justify-content-between\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <label [attr.for]=\"id + '-page-limit'\" class=\"input-group-text\" [textContent]=\"dataTable.labels.paginationLimit\"></label>\n        </div>\n        <select [id]=\"id + '-page-limit'\" class=\"form-control\" [(ngModel)]=\"limit\" [disabled]=\"dataTable.itemCount === 0\">\n          <option *ngFor=\"let l of limits\" [value]=\"l\">{{ l }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"pagination-pages d-flex justify-content-between\">\n      <button [disabled]=\"dataTable.offset <= 0\"\n              (click)=\"pageFirst()\"\n              class=\"btn btn-default pagination-firstpage\"\n              [title]=\"dataTable.labels.firstPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-double-left\" aria-hidden=\"true\"></i>\n      </button>\n      <button [disabled]=\"dataTable.offset <= 0\"\n              (click)=\"pageBack()\"\n              class=\"btn btn-default pagination-prevpage\"\n              [title]=\"dataTable.labels.prevPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"pagination-page\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <label class=\"input-group-text\" [attr.for]=\"id + '-page-input'\">\n              {{ dataTable.labels.pageNumberLabel }}\n            </label>\n          </div>\n          <input #pageInput type=\"number\"\n                 [id]=\"id + '-page-input'\"\n                 class=\"form-control\" min=\"1\" step=\"1\" max=\"{{maxPage}}\"\n                 [disabled]=\"dataTable.itemCount === 0\"\n                 [ngModel]=\"page\"\n                 (blur)=\"validate($event)\"\n                 (keyup.enter)=\"validate($event)\"\n                 (keyup.esc)=\"pageInput.value = page\"\n                 [title]=\"dataTable.labels.pageNumber + ' ' +\n                    dataTable.labels.pageNumberNofM.replace('{N}', ''+page).replace('{M}', ''+maxPage)\"\n                 [attr.aria-controls]=\"dataTable.id\"/>\n          <div class=\"input-group-append\">\n            <span class=\"input-group-text\">\n              {{ dataTable.labels.paginationTotalPages }}&nbsp;{{ dataTable.lastPage }}\n            </span>\n          </div>\n        </div>\n      </div>\n      <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\n              (click)=\"pageForward()\"\n              class=\"btn btn-default pagination-nextpage\"\n              [title]=\"dataTable.labels.nextPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\n      </button>\n      <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\n              (click)=\"pageLast()\"\n              class=\"btn btn-default pagination-lastpage\"\n              [title]=\"dataTable.labels.lastPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n","styles":[".pagination-controllers select{min-width:5rem;text-align:right}.pagination-pages>*{margin:0 .15rem}.pagination-limit{margin-right:1.5rem}.pagination-box button{outline:0!important}"]}]}],"members":{"pageInput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":96,"character":3},"arguments":["pageInput"]}]}],"limits":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":100,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":102,"character":15},"arguments":[{"__symbolic":"reference","name":"DataTable"}]}]],"parameters":[{"__symbolic":"reference","name":"DataTable"}]}],"pageBack":[{"__symbolic":"method"}],"pageForward":[{"__symbolic":"method"}],"pageFirst":[{"__symbolic":"method"}],"pageLast":[{"__symbolic":"method"}],"validate":[{"__symbolic":"method"}]}},"DataTableHeader":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"data-table-header","template":"<div class=\"data-table-header\">\n  <p class=\"h4 title\" *ngIf=\"dataTable.showTitle\" [textContent]=\"dataTable.title\"></p>\n  <div class=\"button-panel\">\n    <button type=\"button\" class=\"btn btn-default btn-sm refresh-button\"\n            (click)=\"dataTable.refreshClick.emit()\"\n            [title]=\"dataTable.labels.headerReload.replace('{title}', dataTable.title)\">\n      <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>\n    </button>\n    <button type=\"button\" class=\"btn btn-default btn-sm column-selector-button\" [class.active]=\"columnSelectorOpen\"\n            [attr.aria-haspopup]=\"true\"\n            [attr.aria-expanded]=\"columnSelectorOpen\"\n            (click)=\"columnSelectorOpen = !columnSelectorOpen;\"\n            [title]=\"dataTable.labels.headerColumnSelector.replace('{title}', dataTable.title)\">\n      <i class=\"fa fa-list\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"column-selector-wrapper\">\n      <div *ngIf=\"columnSelectorOpen\" class=\"column-selector-box panel panel-default\">\n        <ul class=\"list-group list-group-flush\">\n          <li *ngIf=\"dataTable.expandableRows\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.expandColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.expandColumn\"></span>\n            </label>\n          </li>\n          <li *ngIf=\"dataTable.indexColumn\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.indexColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.indexColumn\"></span>\n            </label>\n          </li>\n          <li *ngIf=\"dataTable.selectColumn\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.selectColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.selectColumn\"></span>\n            </label>\n          </li>\n          <ng-template ngFor let-item let-i=\"index\" [ngForOf]=\"dataTable.columns\">\n            <li class=\"list-group-item column-selector-column checkbox\"\n                *ngIf=\"dataTable.primaryColumn !== item.property\">\n              <label class=\"d-flex align-items-center\">\n                <input type=\"checkbox\" [(ngModel)]=\"item.visible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n                <span [textContent]=\"item.header\"></span>\n              </label>\n            </li>\n          </ng-template>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n","styles":[".data-table-header{min-height:25px;margin-bottom:10px}.title{display:inline-block;margin:5px 0 0 5px}.button-panel{float:right}.button-panel button{outline:0!important}.column-selector-wrapper{position:relative}.column-selector-box{-webkit-box-shadow:0 0 10px #d3d3d3;box-shadow:0 0 10px #d3d3d3;background:#fff;width:150px;padding:10px;position:absolute;right:0;top:1px;z-index:1060}.column-selector-box .list-group-item.column-selector-column{padding:.5rem .25rem}.column-selector-box .list-group-item.column-selector-column label{margin-bottom:0}.column-selector-box .list-group-item.column-selector-column input{margin-right:4px;font-style:italic}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":68,"character":15},"arguments":[{"__symbolic":"reference","name":"DataTable"}]}],null],"parameters":[{"__symbolic":"reference","name":"DataTable"},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":69,"character":31}]}],"onClickHandler":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":72,"character":3},"arguments":["document:click",["$event"]]}]}],"onKeyUpHandler":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":78,"character":3},"arguments":["document:keyup",["$event"]]}]}],"onChange":[{"__symbolic":"method"}]}},"DataTableResource":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Array","arguments":[{"__symbolic":"error","message":"Could not resolve type","line":5,"character":29,"context":{"typeName":"T"},"module":"./tools/data-table-resource"}]}]}],"query":[{"__symbolic":"method"}],"count":[{"__symbolic":"method"}]}},"CellCallback":{"__symbolic":"interface"},"RowCallback":{"__symbolic":"interface"},"DataTableTranslations":{"__symbolic":"interface"},"DataTableParams":{"__symbolic":"interface"},"FilterableField":{"__symbolic":"interface"},"Filter":{"__symbolic":"interface"},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":2,"character":1},"arguments":[{"name":"px"}]}],"members":{"transform":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":11,"character":1},"arguments":[{"selector":"[hide]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":19,"character":35},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":19,"character":65}]}],"hide":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"initDisplayStyle":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":3,"character":1},"arguments":[{"name":"min"}]}],"members":{"transform":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"filter-bar","template":"<div class=\"filter-bar\">\n    <div class=\"px-2 pb-2\">\n      <mat-chip-list #chipList>\n        <i class=\"fa fa-filter fa-2x filter-icon mr-1\" (click)=\"filterInput.click()\"></i>\n        <mat-chip *ngFor=\"let filter of filters\" (click)=\"chipClicked($event, filter)\" [removable]=\"true\" (removed)=\"removeFilter(filter)\">\n          {{formatChipDisplayText(filter)}}\n          <mat-icon matChipRemove>cancel</mat-icon>\n        </mat-chip>\n        <input #filterInput autocomplete=\"off\" class=\"filter-input\" [placeholder]=\"dataTable.labels.addFilter\" [matChipInputFor]=\"chipList\" (focus)=\"inputFocused($event)\">\n      </mat-chip-list>\n    </div>\n</div>\n","styles":[".filter-input{background-color:transparent;border:0;height:32px;outline:0;padding:0}.filter-icon{color:#3367d6;cursor:pointer}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":34,"character":5},"arguments":[{"__symbolic":"reference","name":"DataTable"}]}],null],"parameters":[{"__symbolic":"reference","name":"DataTable"},{"__symbolic":"reference","module":"ngx-popup-dialog","name":"PopupDialogService","line":35,"character":31}]}],"ngOnInit":[{"__symbolic":"method"}],"inputFocused":[{"__symbolic":"method"}],"chipClicked":[{"__symbolic":"method"}],"openFieldChooserDialog":[{"__symbolic":"method"}],"openFieldFilterDialog":[{"__symbolic":"method"}],"removeFilter":[{"__symbolic":"method"}],"formatValue":[{"__symbolic":"method"}],"formatChipDisplayText":[{"__symbolic":"method"}],"convertFilterToEmittedFilter":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":17,"character":1},"arguments":[{"selector":"app-field-filter-chooser-popup-dialog","template":"<div class=\"dialog-container\">\n  <form class=\"search-field\">\n    <mat-form-field>\n      <input autocomplete=\"off\" matInput [placeholder]=\"data.labels.searchField\" name=\"fieldSearchQuery\" [ngModel]=\"fieldSearchQuery\"\n        (ngModelChange)=\"onFieldSearch($event)\" (keydown)=\"handleKeyDown($event)\">\n    </mat-form-field>\n  </form>\n  <div class=\"fields-list\">\n    <mat-nav-list>\n      <a tabindex=\"0\" mat-list-item [class.active]=\"activeItem == listItem\" #listItem *ngFor=\"let field of filteredFields\"\n        (click)=\"fieldSelected(field)\">{{field.header}}\n      </a>\n    </mat-nav-list>\n  </div>\n</div>\n","styles":[".dialog-container{padding-bottom:12px}.search-field{padding:12px 12px 0}.fields-list{max-height:250px;overflow-y:auto}::-webkit-scrollbar{width:6px;background-color:#f5f5f5}::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#d9d9d9}.mat-list-item.active{background:rgba(0,0,0,.04)}"]}]}],"members":{"listItem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":38,"character":3},"arguments":["listItem"]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":45,"character":5},"arguments":[{"__symbolic":"reference","module":"ngx-popup-dialog","name":"POPUP_DIALOG_CLOSE","line":45,"character":12}]}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":46,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":46,"character":12}]}]],"parameters":[{"__symbolic":"error","message":"Expression form not supported","line":45,"character":55,"module":"./components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog"},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"onFieldSearch":[{"__symbolic":"method"}],"fieldSelected":[{"__symbolic":"method"}],"handleKeyDown":[{"__symbolic":"method"}]}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":23,"character":1},"arguments":[{"selector":"app-field-filter-popup-dialog","template":"<div>\n  <form #f=\"ngForm\" (ngSubmit)=\"((f.valid && isAtleastOneValueSelected) || selectedOperator == 'empty') && onFilterApply()\">\n    <div class=\"header\">\n      <span class=\"field-label\">{{data.fieldFilter.field.header}}</span>\n      <button mat-dialog-close class=\"icon-button\" mat-icon-button>\n        <mat-icon aria-label=\"close\">close</mat-icon>\n      </button>\n    </div>\n    <div class=\"content\">\n      <div class=\"filter-operator\">\n        <div class=\"mat-auto-width\">\n          <mat-form-field>\n            <mat-select [(value)]=\"selectedOperator\">\n              <mat-option *ngFor=\"let operator of filterOperators\" [value]=\"operator\">\n                {{data.labels.filterOperators[operator]}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"ml-2 mat-auto-width\">\n        <ng-container *ngIf=\"dataType == 'number' && selectedOperator !== 'empty'\">\n          <ng-container *ngTemplateOutlet=\"numericField\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dataType == 'date' && selectedOperator !== 'empty'\">\n          <ng-container *ngTemplateOutlet=\"dateField\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dataType == 'text' && selectedOperator !== 'empty'\">\n          <ng-container *ngTemplateOutlet=\"textField\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dataType == 'enum' && selectedOperator !== 'empty'\">\n          <ng-container *ngTemplateOutlet=\"valuesListField; context: {options: data.fieldFilter.field.possibleOptions, form: f}\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dataType == 'bool' && selectedOperator !== 'empty'\">\n          <ng-container *ngTemplateOutlet=\"booleanField\"></ng-container>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"footer\">\n      <button type=\"submit\" class=\"mx-1\" mat-button>{{data.labels.apply}}</button>\n    </div>\n\n\n    <ng-template #dateField>\n      <mat-form-field hideRequiredMarker=\"true\" floatLabel=\"never\">\n        <input cdkFocusInitial autocomplete=\"off\" matInput [errorStateMatcher]=\"matcher\" #filterValueInput=\"ngModel\" name=\"filterValue\"\n          [(ngModel)]=\"filterValue\" [matDatepicker]=\"picker\" [placeholder]=\"data.labels.date\" class=\"ltr\" required>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker panelClass=\"field-filter-popup-value-panel\"></mat-datepicker>\n        <mat-error *ngIf=\"filterValueInput && filterValueInput.invalid\">{{getErrorMessage(filterValueInput)}}</mat-error>\n      </mat-form-field>\n    </ng-template>\n\n    <ng-template #numericField>\n      <mat-form-field hideRequiredMarker=\"true\" floatLabel=\"never\">\n        <input cdkFocusInitial autocomplete=\"off\" matInput [placeholder]=\"data.labels.value\" [errorStateMatcher]=\"matcher\"\n          #filterValueInput=\"ngModel\" name=\"filterValue\" [(ngModel)]=\"filterValue\" required pattern=\"^[0-9]+(.?[0-9]+)?$\">\n        <mat-error *ngIf=\"filterValueInput && filterValueInput.invalid\">{{getErrorMessage(filterValueInput)}}</mat-error>\n      </mat-form-field>\n    </ng-template>\n\n    <ng-template #valuesListField let-options=\"options\" let-operator=\"operator\" let-f=\"form\">\n      <div class=\"py-3\">\n        <mat-checkbox class=\"d-block\" *ngFor=\"let option of options\" [checked]=\"isValueChecked(option)\" (change)=\"valueCheckChange(option, $event.checked)\">{{getPossibleOptionDisplayText(option)}}</mat-checkbox>\n        <mat-error *ngIf=\"f.submitted && !isAtleastOneValueSelected\">{{MUST_SELECT_VALUE_VALIDATION}}</mat-error>\n      </div>\n    </ng-template>\n\n    <ng-template #booleanField>\n      <div class=\"py-3\">\n        <!-- Workaround to focus radio buttons -->\n        <input style=\"width: 0px; height: 0px;\" cdkFocusInitial (focus)=\"filterValue == false ? radioButtonFalse.focus() : radioButtonTrue.focus()\" autocomplete=\"off\" matInput>\n        <mat-radio-group [(ngModel)]=\"filterValue\" name=\"filterValue\">\n          <mat-radio-button #radioButtonTrue class=\"mr-3\" [value]=\"true\"><mat-icon class=\"mt-1\">check</mat-icon></mat-radio-button>\n          <mat-radio-button #radioButtonFalse [value]=\"false\"><mat-icon class=\"mt-1\">close</mat-icon></mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </ng-template>\n\n    <ng-template #textField>\n      <mat-form-field hideRequiredMarker=\"true\" floatLabel=\"never\">\n        <input cdkFocusInitial autocomplete=\"off\" matInput [placeholder]=\"data.labels.value\" [errorStateMatcher]=\"matcher\"\n          #filterValueInput=\"ngModel\" name=\"filterValue\" [(ngModel)]=\"filterValue\" required>\n        <mat-error *ngIf=\"filterValueInput && filterValueInput.invalid\">{{getErrorMessage(filterValueInput)}}</mat-error>\n      </mat-form-field>\n    </ng-template>\n\n  </form>\n</div>\n","styles":[".header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;background:#3367d6;border-radius:2px 2px 0 0;color:#fff;font-size:15px;min-width:176px;padding:8px}.field-label{padding:0 8px}.icon-button{outline:0}.content{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;overflow:hidden;padding:24px;min-width:200px;max-height:200px;overflow-y:auto}.footer{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;color:#4285f4;padding:8px 0}::ng-deep .mat-select-value{min-width:24px!important}.mat-auto-width ::ng-deep .mat-form-field{width:auto!important}.mat-auto-width ::ng-deep .mat-form-field-infix{width:auto!important}.mat-auto-width ::ng-deep .mat-select-value{max-width:100%;width:auto}::ng-deep .mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:#4285f4}.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background,::ng-deep .mat-checkbox-checked.mat-accent .mat-checkbox-background{background-color:#4285f4}::ng-deep .mat-radio-button.mat-accent .mat-radio-inner-circle{background-color:#4285f4}::ng-deep .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle{border-color:#4285f4}::ng-deep .mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element{background-color:rgba(66,133,244,.26)!important}::-webkit-scrollbar{width:6px;background-color:#f5f5f5}::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#d9d9d9}.ltr{direction:ltr}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":140,"character":5},"arguments":[{"__symbolic":"reference","module":"ngx-popup-dialog","name":"POPUP_DIALOG_CLOSE","line":140,"character":12}]}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":141,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":141,"character":12}]}]],"parameters":[{"__symbolic":"error","message":"Expression form not supported","line":140,"character":55,"module":"./components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog"},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}],"onFilterApply":[{"__symbolic":"method"}],"valueCheckChange":[{"__symbolic":"method"}],"isValueChecked":[{"__symbolic":"method"}],"getErrorMessage":[{"__symbolic":"method"}],"getPossibleOptionValue":[{"__symbolic":"method"}],"getPossibleOptionDisplayText":[{"__symbolic":"method"}],"formatDate":[{"__symbolic":"method"}],"toDate":[{"__symbolic":"method"}]},"statics":{"numericOperators":["lt","gt","lte","gte","eq","ne","empty"],"textualOperators":["contains","not_contains","starts","ends","eq","ne","empty"],"enumOperators":["eq","ne","empty"],"boolOperators":["eq"],"ALL_FILTER_OPERATORS":{"number":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"FieldFilterPopupDialog"},"member":"numericOperators"},"date":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"FieldFilterPopupDialog"},"member":"numericOperators"},"text":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"FieldFilterPopupDialog"},"member":"textualOperators"},"enum":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"FieldFilterPopupDialog"},"member":"enumOperators"},"bool":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"FieldFilterPopupDialog"},"member":"boolOperators"},"$quoted$":["number","date","text","enum","bool"]}}}},"origins":{"DataTableModule":"./datatable.module","DataTable":"./components/table/table.component","DataTableColumn":"./directives/column/column.directive","DataTableRow":"./components/row/row.component","DataTablePagination":"./components/pagination/pagination.component","DataTableHeader":"./components/header/header.component","DataTableResource":"./tools/data-table-resource","CellCallback":"./types/cell-callback.type","RowCallback":"./types/row-callback.type","DataTableTranslations":"./types/data-table-translations.type","DataTableParams":"./types/data-table-params.type","FilterableField":"./types/filterable-field.type","Filter":"./types/filter.type","ɵa":"./utils/px","ɵb":"./utils/hide","ɵc":"./utils/min","ɵd":"./components/filter-bar/filter-bar.component","ɵe":"./components/filter-bar/field-filter-chooser-popup-dialog/field-filter-chooser-popup-dialog","ɵf":"./components/filter-bar/field-filter-popup-dialog/field-filter-popup-dialog"},"importAs":"angular7-data-table"}